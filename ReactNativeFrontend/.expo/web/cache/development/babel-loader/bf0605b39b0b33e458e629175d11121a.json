{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport color from 'color';\nimport IconButton from \"../IconButton\";\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\n\nvar DataTablePagination = function (_React$Component) {\n  _inherits(DataTablePagination, _React$Component);\n\n  var _super = _createSuper(DataTablePagination);\n\n  function DataTablePagination() {\n    _classCallCheck(this, DataTablePagination);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DataTablePagination, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          page = _this$props.page,\n          numberOfPages = _this$props.numberOfPages,\n          onPageChange = _this$props.onPageChange,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, [\"label\", \"page\", \"numberOfPages\", \"onPageChange\", \"style\", \"theme\"]);\n\n      var labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n      return React.createElement(View, _extends({}, rest, {\n        style: [styles.container, style]\n      }), React.createElement(Text, {\n        style: [styles.label, {\n          color: labelColor\n        }],\n        numberOfLines: 1\n      }, label), React.createElement(IconButton, {\n        icon: function icon(_ref) {\n          var size = _ref.size,\n              color = _ref.color;\n          return React.createElement(MaterialCommunityIcon, {\n            name: \"chevron-left\",\n            color: color,\n            size: size,\n            direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n          });\n        },\n        color: theme.colors.text,\n        disabled: page === 0,\n        onPress: function onPress() {\n          return onPageChange(page - 1);\n        }\n      }), React.createElement(IconButton, {\n        icon: function icon(_ref2) {\n          var size = _ref2.size,\n              color = _ref2.color;\n          return React.createElement(MaterialCommunityIcon, {\n            name: \"chevron-right\",\n            color: color,\n            size: size,\n            direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n          });\n        },\n        color: theme.colors.text,\n        disabled: page === numberOfPages - 1,\n        onPress: function onPress() {\n          return onPageChange(page + 1);\n        }\n      }));\n    }\n  }]);\n\n  return DataTablePagination;\n}(React.Component);\n\n_defineProperty(DataTablePagination, \"displayName\", 'DataTable.Pagination');\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 44\n  }\n});\nexport default withTheme(DataTablePagination);\nexport { DataTablePagination };","map":{"version":3,"sources":["DataTablePagination.tsx"],"names":["DataTablePagination","React","theme","labelColor","color","styles","I18nManager","page","onPageChange","numberOfPages","container","justifyContent","flexDirection","alignItems","paddingLeft","label","fontSize","marginRight","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Label text to display\n   */\n  label?: React.ReactNode;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show pagination for data table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-pagination.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const itemsPerPage = 2;\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const from = page * itemsPerPage;\n *   const to = (page + 1) * itemsPerPage;\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.floor(items.length / itemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nclass DataTablePagination extends React.Component<Props> {\n  static displayName = 'DataTable.Pagination';\n\n  render() {\n    const {\n      label,\n      page,\n      numberOfPages,\n      onPageChange,\n      style,\n      theme,\n      ...rest\n    } = this.props;\n    const labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n    return (\n      <View {...rest} style={[styles.container, style]}>\n        <Text style={[styles.label, { color: labelColor }]} numberOfLines={1}>\n          {label}\n        </Text>\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"chevron-left\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          color={theme.colors.text}\n          disabled={page === 0}\n          onPress={() => onPageChange(page - 1)}\n        />\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"chevron-right\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          color={theme.colors.text}\n          disabled={page === numberOfPages - 1}\n          onPress={() => onPageChange(page + 1)}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n  },\n\n  label: {\n    fontSize: 12,\n    marginRight: 44,\n  },\n});\n\nexport default withTheme(DataTablePagination);\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n"]},"metadata":{},"sourceType":"module"}