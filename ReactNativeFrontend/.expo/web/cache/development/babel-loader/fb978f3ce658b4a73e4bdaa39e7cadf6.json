{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { UnavailabilityError } from '@unimodules/core';\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport ExponentSpeech from \"./ExponentSpeech\";\nimport { VoiceQuality } from \"./Speech.types\";\nvar SpeechEventEmitter = ExponentSpeech && new NativeEventEmitter(ExponentSpeech);\nexport { VoiceQuality };\nvar _CALLBACKS = {};\nvar _nextCallbackId = 1;\nvar _didSetListeners = false;\n\nfunction _unregisterListenersIfNeeded() {\n  if (Object.keys(_CALLBACKS).length === 0) {\n    removeSpeakingListener('Exponent.speakingStarted');\n    removeSpeakingListener('Exponent.speakingDone');\n    removeSpeakingListener('Exponent.speakingStopped');\n    removeSpeakingListener('Exponent.speakingError');\n    _didSetListeners = false;\n  }\n}\n\nfunction _registerListenersIfNeeded() {\n  if (_didSetListeners) return;\n  _didSetListeners = true;\n  setSpeakingListener('Exponent.speakingStarted', function (_ref) {\n    var id = _ref.id;\n    var options = _CALLBACKS[id];\n\n    if (options && options.onStart) {\n      options.onStart();\n    }\n  });\n  setSpeakingListener('Exponent.speakingDone', function (_ref2) {\n    var id = _ref2.id;\n    var options = _CALLBACKS[id];\n\n    if (options && options.onDone) {\n      options.onDone();\n    }\n\n    delete _CALLBACKS[id];\n\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingStopped', function (_ref3) {\n    var id = _ref3.id;\n    var options = _CALLBACKS[id];\n\n    if (options && options.onStopped) {\n      options.onStopped();\n    }\n\n    delete _CALLBACKS[id];\n\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingError', function (_ref4) {\n    var id = _ref4.id,\n        error = _ref4.error;\n    var options = _CALLBACKS[id];\n\n    if (options && options.onError) {\n      options.onError(new Error(error));\n    }\n\n    delete _CALLBACKS[id];\n\n    _unregisterListenersIfNeeded();\n  });\n}\n\nexport function speak(text) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var id = _nextCallbackId++;\n  _CALLBACKS[id] = options;\n\n  _registerListenersIfNeeded();\n\n  ExponentSpeech.speak(String(id), text, options);\n}\nexport function getAvailableVoicesAsync() {\n  return _regeneratorRuntime.async(function getAvailableVoicesAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (ExponentSpeech.getVoices) {\n            _context.next = 2;\n            break;\n          }\n\n          throw new UnavailabilityError('Speech', 'getVoices');\n\n        case 2:\n          return _context.abrupt(\"return\", ExponentSpeech.getVoices());\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function isSpeakingAsync() {\n  return _regeneratorRuntime.async(function isSpeakingAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", ExponentSpeech.isSpeaking());\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function stop() {\n  return _regeneratorRuntime.async(function stop$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", ExponentSpeech.stop());\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function pause() {\n  return _regeneratorRuntime.async(function pause$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (ExponentSpeech.pause) {\n            _context4.next = 2;\n            break;\n          }\n\n          throw new UnavailabilityError('Speech', 'pause');\n\n        case 2:\n          return _context4.abrupt(\"return\", ExponentSpeech.pause());\n\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function resume() {\n  return _regeneratorRuntime.async(function resume$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (ExponentSpeech.resume) {\n            _context5.next = 2;\n            break;\n          }\n\n          throw new UnavailabilityError('Speech', 'resume');\n\n        case 2:\n          return _context5.abrupt(\"return\", ExponentSpeech.resume());\n\n        case 3:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction setSpeakingListener(eventName, callback) {\n  if (SpeechEventEmitter.listeners(eventName).length > 0) {\n    SpeechEventEmitter.removeAllListeners(eventName);\n  }\n\n  SpeechEventEmitter.addListener(eventName, callback);\n}\n\nfunction removeSpeakingListener(eventName) {\n  SpeechEventEmitter.removeAllListeners(eventName);\n}","map":{"version":3,"sources":["../src/Speech/Speech.ts"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\nimport { NativeEventEmitter } from 'react-native';\n\nimport ExponentSpeech from './ExponentSpeech';\nimport { SpeechOptions, SpeechEventCallback, VoiceQuality, Voice } from './Speech.types';\n\nconst SpeechEventEmitter = ExponentSpeech && new NativeEventEmitter(ExponentSpeech);\n\nexport { SpeechOptions, SpeechEventCallback, VoiceQuality, Voice };\n\nconst _CALLBACKS = {};\nlet _nextCallbackId = 1;\nlet _didSetListeners = false;\n\nfunction _unregisterListenersIfNeeded() {\n  if (Object.keys(_CALLBACKS).length === 0) {\n    removeSpeakingListener('Exponent.speakingStarted');\n    removeSpeakingListener('Exponent.speakingDone');\n    removeSpeakingListener('Exponent.speakingStopped');\n    removeSpeakingListener('Exponent.speakingError');\n    _didSetListeners = false;\n  }\n}\n\nfunction _registerListenersIfNeeded() {\n  if (_didSetListeners) return;\n  _didSetListeners = true;\n  setSpeakingListener('Exponent.speakingStarted', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onStart) {\n      options.onStart();\n    }\n  });\n  setSpeakingListener('Exponent.speakingDone', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onDone) {\n      options.onDone();\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingStopped', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onStopped) {\n      options.onStopped();\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingError', ({ id, error }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onError) {\n      options.onError(new Error(error));\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n}\n\nexport function speak(text: string, options: SpeechOptions = {}) {\n  const id = _nextCallbackId++;\n  _CALLBACKS[id] = options;\n  _registerListenersIfNeeded();\n  ExponentSpeech.speak(String(id), text, options);\n}\n\nexport async function getAvailableVoicesAsync(): Promise<Voice[]> {\n  if (!ExponentSpeech.getVoices) {\n    throw new UnavailabilityError('Speech', 'getVoices');\n  }\n  return ExponentSpeech.getVoices();\n}\n\nexport async function isSpeakingAsync(): Promise<boolean> {\n  return ExponentSpeech.isSpeaking();\n}\n\nexport async function stop(): Promise<void> {\n  return ExponentSpeech.stop();\n}\n\nexport async function pause(): Promise<void> {\n  if (!ExponentSpeech.pause) {\n    throw new UnavailabilityError('Speech', 'pause');\n  }\n  return ExponentSpeech.pause();\n}\n\nexport async function resume(): Promise<void> {\n  if (!ExponentSpeech.resume) {\n    throw new UnavailabilityError('Speech', 'resume');\n  }\n\n  return ExponentSpeech.resume();\n}\n\nfunction setSpeakingListener(eventName, callback) {\n  if (SpeechEventEmitter.listeners(eventName).length > 0) {\n    SpeechEventEmitter.removeAllListeners(eventName);\n  }\n  SpeechEventEmitter.addListener(eventName, callback);\n}\n\nfunction removeSpeakingListener(eventName) {\n  SpeechEventEmitter.removeAllListeners(eventName);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}