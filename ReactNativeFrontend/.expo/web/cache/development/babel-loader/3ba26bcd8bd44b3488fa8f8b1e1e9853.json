{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/cosentus/Documents/GitHub/SIH-Project/ReactNativeFrontend/pages/Camera.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as Permissions from 'expo-permissions';\nimport { Camera } from 'expo-camera';\n\nvar CameraExample = function (_React$Component) {\n  _inherits(CameraExample, _React$Component);\n\n  var _super = _createSuper(CameraExample);\n\n  function CameraExample(props) {\n    var _this;\n\n    _classCallCheck(this, CameraExample);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      hasCameraPermission: null,\n      type: Camera.Constants.Type.back\n    };\n    _this.takePicture = _this.takePicture.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CameraExample, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n              this.setState({\n                hasCameraPermission: status === 'granted'\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"takePicture\",\n    value: function takePicture() {\n      var options, data;\n      return _regeneratorRuntime.async(function takePicture$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!this.camera) {\n                _context2.next = 6;\n                break;\n              }\n\n              options = {\n                skipProcessing: true\n              };\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(this.camera.takePictureAsync(options));\n\n            case 4:\n              data = _context2.sent;\n              this.props.navigation.navigate('ShowImage', {\n                uri: data.uri\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermission = this.state.hasCameraPermission;\n\n      if (hasCameraPermission === null) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 14\n          }\n        });\n      } else if (hasCameraPermission === false) {\n        return React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 14\n          }\n        }, \"No access to camera\");\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 9\n          }\n        }, React.createElement(Camera, {\n          style: {\n            flex: 1\n          },\n          type: this.state.type,\n          ref: function ref(_ref) {\n            _this2.camera = _ref;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            margin: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            _this2.setState({\n              type: _this2.state.type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            marginBottom: 10,\n            color: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }\n        }, \" Flip \")), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2.props.navigation.goBack(null);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            marginBottom: 20,\n            color: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }\n        }, \"X\"))), React.createElement(View, {\n          style: {\n            flex: 1,\n            backgroundColor: 'transparent',\n            flexDirection: 'row',\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: {\n            justifyContent: 'flex-end'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: this.takePicture,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/circle-cropped.png\"),\n          style: {\n            width: 70,\n            height: 70,\n            marginBottom: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }\n        }))))));\n      }\n    }\n  }]);\n\n  return CameraExample;\n}(React.Component);\n\nexport { CameraExample as default };","map":{"version":3,"sources":["/Users/cosentus/Documents/GitHub/SIH-Project/ReactNativeFrontend/pages/Camera.js"],"names":["React","Permissions","Camera","CameraExample","props","state","hasCameraPermission","type","Constants","Type","back","takePicture","bind","askAsync","CAMERA","status","setState","camera","options","skipProcessing","takePictureAsync","data","navigation","navigate","uri","flex","ref","flexDirection","justifyContent","margin","front","fontSize","marginBottom","color","goBack","backgroundColor","require","width","height","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, TouchableOpacity, Image } from 'react-native';\nimport * as Permissions from 'expo-permissions';\nimport { Camera } from 'expo-camera';\n\nexport default class CameraExample extends React.Component {\n    constructor(props){\n        super(props);\n        this.takePicture=this.takePicture.bind(this);\n        // this.goBack=this.goBack.bind(this);\n        // const { navigation } = this.props;\n    }\n  state = {\n    hasCameraPermission: null,\n    type: Camera.Constants.Type.back,\n  };\n\n  async componentDidMount() {\n    const { status } = await Permissions.askAsync(Permissions.CAMERA);\n    this.setState({ hasCameraPermission: status === 'granted' });\n  }\n    async takePicture () {\n        if (this.camera) {\n            // const options = {quality: 1, base64: true};\n            // const data = await this.camera.takePictureAsync(options);\n            // console.log(data);\n            // this.props.navigation.navigate('ShowImage', {uri:data.base64});\n            const options = {skipProcessing: true};\n            const data = await this.camera.takePictureAsync(options);\n            //console.log(data.uri);\n            this.props.navigation.navigate('ShowImage',{uri:data.uri});\n        }\n    };\n\n    // goBack(){\n    //   console.log(\"go back\")\n    //   this.props.navigation.goBack();\n    // }\n\n  render() {\n    const { hasCameraPermission } = this.state;\n    if (hasCameraPermission === null) {\n      return <View />;\n    } else if (hasCameraPermission === false) {\n      return <Text>No access to camera</Text>;\n    } else {\n      return (\n        <View style={{ flex: 1 }}>\n          <Camera style={{ flex: 1 }} type={this.state.type} ref={ref => {\n        this.camera = ref;\n      }}>\n        <View style={{flexDirection:'row',justifyContent:'space-between',margin:10}}>\n          <TouchableOpacity\n            onPress={() => {\n              this.setState({\n                type:\n                  this.state.type === Camera.Constants.Type.back\n                    ? Camera.Constants.Type.front\n                    : Camera.Constants.Type.back,\n              });\n            }}>\n            <Text style={{ fontSize: 18, marginBottom: 10, color: 'white' }}> Flip </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n          onPress={() => this.props.navigation.goBack(null)}>\n            <Text style={{ fontSize: 18, marginBottom: 20, color: 'white' }}>X</Text>\n          </TouchableOpacity>\n        </View>\n    \n            <View\n              style={{\n                flex: 1,\n                backgroundColor: 'transparent',\n                flexDirection: 'row',\n                justifyContent:'center',\n                // alignItems: 'center',\n                // alignSelf: 'flex-end',\n              }}\n              >\n                <View\n                style={{\n                  // flex: 0.1,\n                  // flexDirection:'row',\n                  justifyContent: 'flex-end',\n                  \n                }}\n                \n                \n                >\n                  \n                  <TouchableOpacity onPress={this.takePicture}> \n                    <Image source={require(\"../assets/circle-cropped.png\")}\n                    style={{width: 70,\n                    height: 70,\n                    marginBottom:10}} /> \n                  </TouchableOpacity>\n                </View>\n              \n              \n            </View>\n          </Camera>\n        </View>\n      );\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}