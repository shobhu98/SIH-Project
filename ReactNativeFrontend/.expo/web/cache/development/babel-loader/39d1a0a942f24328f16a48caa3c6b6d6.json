{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport overlay from \"../../styles/overlay\";\nimport Appbar, { DEFAULT_APPBAR_HEIGHT } from \"./Appbar\";\nimport shadow from \"../../styles/shadow\";\nimport { withTheme } from \"../../core/theming\";\nimport { APPROX_STATUSBAR_HEIGHT } from \"../../constants\";\n\nvar AppbarHeader = function (_React$Component) {\n  _inherits(AppbarHeader, _React$Component);\n\n  var _super = _createSuper(AppbarHeader);\n\n  function AppbarHeader() {\n    _classCallCheck(this, AppbarHeader);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AppbarHeader, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$statusBar = _this$props.statusBarHeight,\n          statusBarHeight = _this$props$statusBar === void 0 ? APPROX_STATUSBAR_HEIGHT : _this$props$statusBar,\n          style = _this$props.style,\n          dark = _this$props.dark,\n          rest = _objectWithoutProperties(_this$props, [\"statusBarHeight\", \"style\", \"dark\"]);\n\n      var _rest$theme = rest.theme,\n          isDarkTheme = _rest$theme.dark,\n          colors = _rest$theme.colors,\n          mode = _rest$theme.mode;\n\n      var _ref = StyleSheet.flatten(style) || {},\n          _ref$height = _ref.height,\n          height = _ref$height === void 0 ? DEFAULT_APPBAR_HEIGHT : _ref$height,\n          _ref$elevation = _ref.elevation,\n          elevation = _ref$elevation === void 0 ? 4 : _ref$elevation,\n          customBackground = _ref.backgroundColor,\n          _ref$zIndex = _ref.zIndex,\n          zIndex = _ref$zIndex === void 0 ? 0 : _ref$zIndex,\n          restStyle = _objectWithoutProperties(_ref, [\"height\", \"elevation\", \"backgroundColor\", \"zIndex\"]);\n\n      var backgroundColor = customBackground ? customBackground : isDarkTheme && mode === 'adaptive' ? overlay(elevation, colors.surface) : colors.primary;\n      var Wrapper = typeof this.props.statusBarHeight === 'number' ? View : SafeAreaView;\n      return React.createElement(Wrapper, {\n        style: [{\n          backgroundColor: backgroundColor,\n          zIndex: zIndex,\n          elevation: elevation\n        }, shadow(elevation)]\n      }, React.createElement(Appbar, _extends({\n        style: [{\n          height: height,\n          backgroundColor: backgroundColor,\n          marginTop: statusBarHeight\n        }, styles.appbar, restStyle],\n        dark: dark\n      }, rest)));\n    }\n  }]);\n\n  return AppbarHeader;\n}(React.Component);\n\n_defineProperty(AppbarHeader, \"displayName\", 'Appbar.Header');\n\nvar styles = StyleSheet.create({\n  appbar: {\n    elevation: 0\n  }\n});\nexport default withTheme(AppbarHeader);\nexport { AppbarHeader };","map":{"version":3,"sources":["AppbarHeader.tsx"],"names":["AppbarHeader","React","statusBarHeight","dark","mode","rest","height","elevation","backgroundColor","zIndex","StyleSheet","customBackground","isDarkTheme","overlay","colors","Wrapper","shadow","marginTop","styles","appbar","withTheme"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;AAQA,OAAA,OAAA;AACA,OAAA,MAAA,IAAA,qBAAA;AACA,OAAA,MAAA;AACA,SAAA,SAAA;AACA,SAAA,uBAAA;;IAiEA,Y;;;;;;;;;;;;;6BAGW;AACP,UAAA,WAAA,GAMI,KANJ,KAAA;AAAA,kCAAA,WAAA,CAEEE,eAFF;AAAA,UAEEA,eAFF,sCAAM,uBAAN;AAAA,UAAM,KAAN,GAAA,WAAA,CAAM,KAAN;AAAA,UAIEC,IAJF,GAAA,WAAA,CAIEA,IAJF;AAAA,UAAA,IAAA,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,iBAAA,EAAA,OAAA,EAAA,MAAA,CAAA,CAAA;;AADO,wBAQqCE,IAAI,CAAhD,KARO;AAAA,UAQD,WARC,eAQCF,IARD;AAAA,UAQD,MARC,eAQD,MARC;AAAA,UAQ4BC,IAR5B,eAQ4BA,IAR5B;;AASP,UAAA,IAAA,GAMeM,UAAU,CAAVA,OAAAA,CAAAA,KAAAA,KANf,EAAA;AAAA,wBAAA,IAAA,CACEJ,MADF;AAAA,UACEA,MADF,4BAAM,qBAAN;AAAA,2BAAA,IAAA,CAEEC,SAFF;AAAA,UAEEA,SAFF,+BAAM,CAAN;AAAA,UAAM,gBAAN,GAAA,IAAA,CAGEC,eAHF;AAAA,wBAAA,IAAA,CAIEC,MAJF;AAAA,UAIEA,MAJF,4BAIW,CAJX;AAAA,UAAA,SAAA,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,QAAA,EAAA,WAAA,EAAA,iBAAA,EAAA,QAAA,CAAA,CAAA;;AAOA,UAAMD,eAAe,GAAGG,gBAAgB,GAAA,gBAAA,GAEpCC,WAAW,IAAIR,IAAI,KAAnBQ,UAAAA,GACAC,OAAO,CAAA,SAAA,EAAYC,MAAM,CADzBF,OACO,CADPA,GAEAE,MAAM,CApBH,OAgBP;AAMA,UAAMC,OAAO,GACX,OAAO,KAAA,KAAA,CAAP,eAAA,KAAA,QAAA,GAAA,IAAA,GADF,YAAA;AAGA,aACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACE,QAAA,KAAK,EACH,CACE;AAAEP,UAAAA,eAAF,EAAEA,eAAF;AAAmBC,UAAAA,MAAnB,EAAmBA,MAAnB;AAA2BF,UAAAA,SAAAA,EAAAA;AAA3B,SADF,EAEES,MAAM,CAFR,SAEQ,CAFR;AAFJ,OAAA,EAQE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA;AAEE,QAAA,KAAK,EAAE,CAEL;AAAEV,UAAAA,MAAF,EAAEA,MAAF;AAAUE,UAAAA,eAAV,EAAUA,eAAV;AAA2BS,UAAAA,SAAS,EAAEf;AAAtC,SAFK,EAGLgB,MAAM,CAHD,MAAA,EAFT,SAES,CAFT;AAQE,QAAA,IAAI,EAAEf;AARR,OAAA,EATJ,IASI,CAAA,CARF,CADF;AAsBD;;;;EAlDwBF,KAAK,CAAhC,S;;gBAAMD,Y,iBACiB,e;;AAoDvB,IAAMkB,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BC,EAAAA,MAAM,EAAE;AACNZ,IAAAA,SAAS,EAAE;AADL;AADuB,CAAlB,CAAf;AAMA,eAAea,SAAS,CAAxB,YAAwB,CAAxB;AAGA,SAAA,YAAA","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  SafeAreaView,\n  ViewStyle,\n} from 'react-native';\nimport overlay from '../../styles/overlay';\nimport Appbar, { DEFAULT_APPBAR_HEIGHT } from './Appbar';\nimport shadow from '../../styles/shadow';\nimport { withTheme } from '../../core/theming';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\n\ntype Props = React.ComponentProps<typeof Appbar> & {\n  /**\n   * Whether the background color is a dark color. A dark header will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Extra padding to add at the top of header to account for translucent status bar.\n   * This is automatically handled on iOS >= 11 including iPhone X using `SafeAreaView`.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to disable the default behaviour, and customize the height.\n   */\n  statusBarHeight?: number;\n  /**\n   * Content of the header.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to use as a header at the top of the screen.\n * It can contain the screen title, controls such as navigation buttons, menu button etc.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.android.png\" />\n *     <figcaption>Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.ios.png\" />\n *     <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const _goBack = () => console.log('Went back');\n *\n *   const _handleSearch = () => console.log('Searching');\n *\n *   const _handleMore = () => console.log('Shown more');\n *\n *   return (\n *     <Appbar.Header>\n *       <Appbar.BackAction onPress={_goBack} />\n *       <Appbar.Content title=\"Title\" subtitle=\"Subtitle\" />\n *       <Appbar.Action icon=\"magnify\" onPress={_handleSearch} />\n *       <Appbar.Action icon=\"dots-vertical\" onPress={_handleMore} />\n *     </Appbar.Header>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nclass AppbarHeader extends React.Component<Props> {\n  static displayName = 'Appbar.Header';\n\n  render() {\n    const {\n      // Don't use default props since we check it to know whether we should use SafeAreaView\n      statusBarHeight = APPROX_STATUSBAR_HEIGHT,\n      style,\n      dark,\n      ...rest\n    } = this.props;\n    const { dark: isDarkTheme, colors, mode } = rest.theme;\n    const {\n      height = DEFAULT_APPBAR_HEIGHT,\n      elevation = 4,\n      backgroundColor: customBackground,\n      zIndex = 0,\n      ...restStyle\n    }: ViewStyle = StyleSheet.flatten(style) || {};\n    const backgroundColor = customBackground\n      ? customBackground\n      : isDarkTheme && mode === 'adaptive'\n      ? overlay(elevation, colors.surface)\n      : colors.primary;\n    // Let the user override the behaviour\n    const Wrapper =\n      typeof this.props.statusBarHeight === 'number' ? View : SafeAreaView;\n\n    return (\n      <Wrapper\n        style={\n          [\n            { backgroundColor, zIndex, elevation },\n            shadow(elevation),\n          ] as StyleProp<ViewStyle>\n        }\n      >\n        <Appbar\n          //@ts-ignore\n          style={[\n            //@ts-ignore\n            { height, backgroundColor, marginTop: statusBarHeight },\n            styles.appbar,\n            restStyle,\n          ]}\n          dark={dark}\n          {...rest}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  appbar: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(AppbarHeader);\n\n// @component-docs ignore-next-line\nexport { AppbarHeader };\n"]},"metadata":{},"sourceType":"module"}