{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport invariant from 'invariant';\nimport { CameraType, ImageType } from \"./CameraModule.types\";\nimport { requestUserMediaAsync } from \"./UserMediaManager\";\nimport { CameraTypeToFacingMode, ImageTypeFormat, MinimumConstraints } from \"./constants\";\nexport function getImageSize(videoWidth, videoHeight, scale) {\n  var width = videoWidth * scale;\n  var ratio = videoWidth / width;\n  var height = videoHeight / ratio;\n  return {\n    width: width,\n    height: height\n  };\n}\nexport function toDataURL(canvas, imageType, quality) {\n  invariant(Object.values(ImageType).includes(imageType), \"expo-camera: \" + imageType + \" is not a valid ImageType. Expected a string from: \" + Object.values(ImageType).join(', '));\n  var format = ImageTypeFormat[imageType];\n\n  if (imageType === ImageType.jpg) {\n    invariant(quality <= 1 && quality >= 0, \"expo-camera: \" + quality + \" is not a valid image quality. Expected a number from 0...1\");\n    return canvas.toDataURL(format, quality);\n  } else {\n    return canvas.toDataURL(format);\n  }\n}\nexport function hasValidConstraints(preferredCameraType, width, height) {\n  return preferredCameraType !== undefined && width !== undefined && height !== undefined;\n}\n\nfunction ensureCaptureOptions(config) {\n  var captureOptions = {\n    scale: 1,\n    imageType: ImageType.png,\n    isImageMirror: false\n  };\n\n  for (var key in config) {\n    if (key in config && config[key] !== undefined && key in captureOptions) {\n      captureOptions[key] = config[key];\n    }\n  }\n\n  return captureOptions;\n}\n\nvar DEFAULT_QUALITY = 0.92;\nexport function captureImage(video, pictureOptions) {\n  var config = ensureCaptureOptions(pictureOptions);\n  var scale = config.scale,\n      imageType = config.imageType,\n      _config$quality = config.quality,\n      quality = _config$quality === void 0 ? DEFAULT_QUALITY : _config$quality,\n      isImageMirror = config.isImageMirror;\n  var videoWidth = video.videoWidth,\n      videoHeight = video.videoHeight;\n\n  var _getImageSize = getImageSize(videoWidth, videoHeight, scale),\n      width = _getImageSize.width,\n      height = _getImageSize.height;\n\n  var canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  var context = canvas.getContext('2d');\n  if (!context) throw new Error('Context is not defined');\n\n  if (isImageMirror) {\n    context.setTransform(-1, 0, 0, 1, canvas.width, 0);\n  }\n\n  context.drawImage(video, 0, 0, width, height);\n  var base64 = toDataURL(canvas, imageType, quality);\n  return base64;\n}\n\nfunction getSupportedConstraints() {\n  if (navigator.mediaDevices && navigator.mediaDevices.getSupportedConstraints) {\n    return navigator.mediaDevices.getSupportedConstraints();\n  }\n\n  return null;\n}\n\nexport function getIdealConstraints(preferredCameraType, width, height) {\n  var preferredConstraints = {\n    audio: false,\n    video: {}\n  };\n\n  if (hasValidConstraints(preferredCameraType, width, height)) {\n    return MinimumConstraints;\n  }\n\n  var supports = getSupportedConstraints();\n  if (!supports || !supports.facingMode || !supports.width || !supports.height) return MinimumConstraints;\n\n  if (preferredCameraType && Object.values(CameraType).includes(preferredCameraType)) {\n    var facingMode = CameraTypeToFacingMode[preferredCameraType];\n\n    if (isWebKit()) {\n      var key = facingMode === 'user' ? 'exact' : 'ideal';\n      preferredConstraints.video.facingMode = _defineProperty({}, key, facingMode);\n    } else {\n      preferredConstraints.video.facingMode = {\n        ideal: CameraTypeToFacingMode[preferredCameraType]\n      };\n    }\n  }\n\n  if (isMediaTrackConstraints(preferredConstraints.video)) {\n    preferredConstraints.video.width = width;\n    preferredConstraints.video.height = height;\n  }\n\n  return preferredConstraints;\n}\n\nfunction isMediaTrackConstraints(input) {\n  return input && typeof input.video !== 'boolean';\n}\n\nexport function getStreamDevice(preferredCameraType, preferredWidth, preferredHeight) {\n  var constraints, stream;\n  return _regeneratorRuntime.async(function getStreamDevice$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          constraints = getIdealConstraints(preferredCameraType, preferredWidth, preferredHeight);\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(requestUserMediaAsync(constraints));\n\n        case 3:\n          stream = _context.sent;\n          return _context.abrupt(\"return\", stream);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function isWebKit() {\n  return /WebKit/.test(navigator.userAgent) && !/Edg/.test(navigator.userAgent);\n}","map":{"version":3,"sources":["../../src/CameraModule/CameraUtils.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-env browser */\nimport invariant from 'invariant';\n\nimport { CameraPictureOptions } from './../Camera.types';\nimport { CameraType, CaptureOptions, ImageSize, ImageType } from './CameraModule.types';\nimport { requestUserMediaAsync } from './UserMediaManager';\nimport { CameraTypeToFacingMode, ImageTypeFormat, MinimumConstraints } from './constants';\n\ninterface ConstrainLongRange {\n  max?: number;\n  min?: number;\n  exact?: number;\n  ideal?: number;\n}\n\nexport function getImageSize(videoWidth: number, videoHeight: number, scale: number): ImageSize {\n  const width = videoWidth * scale;\n  const ratio = videoWidth / width;\n  const height = videoHeight / ratio;\n\n  return {\n    width,\n    height,\n  };\n}\n\nexport function toDataURL(\n  canvas: HTMLCanvasElement,\n  imageType: ImageType,\n  quality: number\n): string {\n  invariant(\n    Object.values(ImageType).includes(imageType),\n    `expo-camera: ${imageType} is not a valid ImageType. Expected a string from: ${Object.values(\n      ImageType\n    ).join(', ')}`\n  );\n\n  const format = ImageTypeFormat[imageType];\n  if (imageType === ImageType.jpg) {\n    invariant(\n      quality <= 1 && quality >= 0,\n      `expo-camera: ${quality} is not a valid image quality. Expected a number from 0...1`\n    );\n    return canvas.toDataURL(format, quality);\n  } else {\n    return canvas.toDataURL(format);\n  }\n}\n\nexport function hasValidConstraints(\n  preferredCameraType?: CameraType,\n  width?: number | ConstrainLongRange,\n  height?: number | ConstrainLongRange\n): boolean {\n  return preferredCameraType !== undefined && width !== undefined && height !== undefined;\n}\n\nfunction ensureCaptureOptions(config: any): CaptureOptions {\n  const captureOptions = {\n    scale: 1,\n    imageType: ImageType.png,\n    isImageMirror: false,\n  };\n\n  for (const key in config) {\n    if (key in config && config[key] !== undefined && key in captureOptions) {\n      captureOptions[key] = config[key];\n    }\n  }\n  return captureOptions;\n}\n\nconst DEFAULT_QUALITY = 0.92;\n\nexport function captureImage(\n  video: HTMLVideoElement,\n  pictureOptions: CameraPictureOptions\n): string {\n  const config = ensureCaptureOptions(pictureOptions);\n  const { scale, imageType, quality = DEFAULT_QUALITY, isImageMirror } = config;\n\n  const { videoWidth, videoHeight } = video;\n  const { width, height } = getImageSize(videoWidth, videoHeight, scale);\n\n  // Build the canvas size and draw the camera image to the context from video\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const context = canvas.getContext('2d');\n\n  //TODO: Bacon: useless\n  if (!context) throw new Error('Context is not defined');\n  // Flip horizontally (as css transform: rotateY(180deg))\n  if (isImageMirror) {\n    context.setTransform(-1, 0, 0, 1, canvas.width, 0);\n  }\n\n  context.drawImage(video, 0, 0, width, height);\n\n  const base64 = toDataURL(canvas, imageType, quality);\n  return base64;\n}\n\nfunction getSupportedConstraints(): MediaTrackSupportedConstraints | null {\n  if (navigator.mediaDevices && navigator.mediaDevices.getSupportedConstraints) {\n    return navigator.mediaDevices.getSupportedConstraints();\n  }\n  return null;\n}\n\nexport function getIdealConstraints(\n  preferredCameraType: CameraType,\n  width?: number | ConstrainLongRange,\n  height?: number | ConstrainLongRange\n): MediaStreamConstraints {\n  const preferredConstraints: MediaStreamConstraints = {\n    audio: false,\n    video: {},\n  };\n\n  if (hasValidConstraints(preferredCameraType, width, height)) {\n    return MinimumConstraints;\n  }\n\n  const supports = getSupportedConstraints();\n  // TODO: Bacon: Test this\n  if (!supports || !supports.facingMode || !supports.width || !supports.height)\n    return MinimumConstraints;\n\n  if (preferredCameraType && Object.values(CameraType).includes(preferredCameraType)) {\n    const facingMode = CameraTypeToFacingMode[preferredCameraType];\n    if (isWebKit()) {\n      const key = facingMode === 'user' ? 'exact' : 'ideal';\n      (preferredConstraints.video as MediaTrackConstraints).facingMode = {\n        [key]: facingMode,\n      };\n    } else {\n      (preferredConstraints.video as MediaTrackConstraints).facingMode = {\n        ideal: CameraTypeToFacingMode[preferredCameraType],\n      };\n    }\n  }\n\n  if (isMediaTrackConstraints(preferredConstraints.video)) {\n    preferredConstraints.video.width = width;\n    preferredConstraints.video.height = height;\n  }\n\n  return preferredConstraints;\n}\n\nfunction isMediaTrackConstraints(input: any): input is MediaTrackConstraints {\n  return input && typeof input.video !== 'boolean';\n}\n\nexport async function getStreamDevice(\n  preferredCameraType: CameraType,\n  preferredWidth?: number | ConstrainLongRange,\n  preferredHeight?: number | ConstrainLongRange\n): Promise<MediaStream> {\n  const constraints: MediaStreamConstraints = getIdealConstraints(\n    preferredCameraType,\n    preferredWidth,\n    preferredHeight\n  );\n  const stream: MediaStream = await requestUserMediaAsync(constraints);\n  return stream;\n}\n\nexport function isWebKit(): boolean {\n  return /WebKit/.test(navigator.userAgent) && !/Edg/.test(navigator.userAgent);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}