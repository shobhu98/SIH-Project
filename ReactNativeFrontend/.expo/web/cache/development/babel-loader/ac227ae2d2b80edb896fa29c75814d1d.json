{"ast":null,"code":"var _jsxFileName = \"/Users/cosentus/Documents/GitHub/SIH-Project/ReactNativeFrontend/node_modules/react-native-gifted-chat/lib/TypingIndicator.js\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TypingAnimation } from 'react-native-typing-animation';\nimport { useUpdateLayoutEffect } from \"./hooks/useUpdateLayoutEffect\";\nimport Color from \"./Color\";\n\nvar TypingIndicator = function TypingIndicator(_ref) {\n  var isTyping = _ref.isTyping;\n\n  var _React$useMemo = React.useMemo(function () {\n    return {\n      yCoords: new Animated.Value(200),\n      heightScale: new Animated.Value(0),\n      marginScale: new Animated.Value(0)\n    };\n  }, []),\n      yCoords = _React$useMemo.yCoords,\n      heightScale = _React$useMemo.heightScale,\n      marginScale = _React$useMemo.marginScale;\n\n  useUpdateLayoutEffect(function () {\n    if (isTyping) {\n      slideIn();\n    } else {\n      slideOut();\n    }\n  }, [isTyping]);\n\n  var slideIn = function slideIn() {\n    Animated.parallel([Animated.spring(yCoords, {\n      toValue: 0,\n      useNativeDriver: false\n    }), Animated.timing(heightScale, {\n      toValue: 35,\n      duration: 250,\n      useNativeDriver: false\n    }), Animated.timing(marginScale, {\n      toValue: 8,\n      duration: 250,\n      useNativeDriver: false\n    })]).start();\n  };\n\n  var slideOut = function slideOut() {\n    Animated.parallel([Animated.spring(yCoords, {\n      toValue: 200,\n      useNativeDriver: false\n    }), Animated.timing(heightScale, {\n      toValue: 0,\n      duration: 250,\n      useNativeDriver: false\n    }), Animated.timing(marginScale, {\n      toValue: 0,\n      duration: 250,\n      useNativeDriver: false\n    })]).start();\n  };\n\n  return React.createElement(Animated.View, {\n    style: [styles.container, {\n      transform: [{\n        translateY: yCoords\n      }],\n      height: heightScale,\n      marginBottom: marginScale\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, isTyping ? React.createElement(TypingAnimation, {\n    style: {\n      marginLeft: 6,\n      marginTop: 7.2\n    },\n    dotRadius: 4,\n    dotMargin: 5.5,\n    dotColor: 'rgba(0, 0, 0, 0.38)',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 20\n    }\n  }) : null);\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    marginLeft: 8,\n    width: 45,\n    borderRadius: 15,\n    backgroundColor: Color.leftBubbleBackground\n  }\n});\nexport default TypingIndicator;","map":{"version":3,"sources":["../src/TypingIndicator.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport { TypingAnimation } from 'react-native-typing-animation';\nimport { useUpdateLayoutEffect } from './hooks/useUpdateLayoutEffect';\nimport Color from './Color';\nconst TypingIndicator = ({ isTyping }) => {\n    const { yCoords, heightScale, marginScale } = React.useMemo(() => ({\n        yCoords: new Animated.Value(200),\n        heightScale: new Animated.Value(0),\n        marginScale: new Animated.Value(0),\n    }), []);\n    // on isTyping fire side effect\n    useUpdateLayoutEffect(() => {\n        if (isTyping) {\n            slideIn();\n        }\n        else {\n            slideOut();\n        }\n    }, [isTyping]);\n    // side effect\n    const slideIn = () => {\n        Animated.parallel([\n            Animated.spring(yCoords, {\n                toValue: 0,\n                useNativeDriver: false,\n            }),\n            Animated.timing(heightScale, {\n                toValue: 35,\n                duration: 250,\n                useNativeDriver: false,\n            }),\n            Animated.timing(marginScale, {\n                toValue: 8,\n                duration: 250,\n                useNativeDriver: false,\n            }),\n        ]).start();\n    };\n    // side effect\n    const slideOut = () => {\n        Animated.parallel([\n            Animated.spring(yCoords, {\n                toValue: 200,\n                useNativeDriver: false,\n            }),\n            Animated.timing(heightScale, {\n                toValue: 0,\n                duration: 250,\n                useNativeDriver: false,\n            }),\n            Animated.timing(marginScale, {\n                toValue: 0,\n                duration: 250,\n                useNativeDriver: false,\n            }),\n        ]).start();\n    };\n    return (<Animated.View style={[\n        styles.container,\n        {\n            transform: [\n                {\n                    translateY: yCoords,\n                },\n            ],\n            height: heightScale,\n            marginBottom: marginScale,\n        },\n    ]}>\n      {isTyping ? (<TypingAnimation style={{ marginLeft: 6, marginTop: 7.2 }} dotRadius={4} dotMargin={5.5} dotColor={'rgba(0, 0, 0, 0.38)'}/>) : null}\n    </Animated.View>);\n};\nconst styles = StyleSheet.create({\n    container: {\n        marginLeft: 8,\n        width: 45,\n        borderRadius: 15,\n        backgroundColor: Color.leftBubbleBackground,\n    },\n});\nexport default TypingIndicator;\n//# sourceMappingURL=TypingIndicator.js.map"]},"metadata":{},"sourceType":"module"}