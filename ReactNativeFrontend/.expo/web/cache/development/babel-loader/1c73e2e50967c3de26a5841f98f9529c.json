{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport color from 'color';\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\n\nvar DataTableTitle = function (_React$Component) {\n  _inherits(DataTableTitle, _React$Component);\n\n  var _super = _createSuper(DataTableTitle);\n\n  function DataTableTitle() {\n    var _this;\n\n    _classCallCheck(this, DataTableTitle);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      spinAnim: new Animated.Value(_this.props.sortDirection === 'ascending' ? 0 : 1)\n    });\n\n    return _this;\n  }\n\n  _createClass(DataTableTitle, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.sortDirection === this.props.sortDirection) {\n        return;\n      }\n\n      Animated.timing(this.state.spinAnim, {\n        toValue: this.props.sortDirection === 'ascending' ? 0 : 1,\n        duration: 150,\n        useNativeDriver: true\n      }).start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          numeric = _this$props.numeric,\n          children = _this$props.children,\n          onPress = _this$props.onPress,\n          sortDirection = _this$props.sortDirection,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          numberOfLines = _this$props.numberOfLines,\n          rest = _objectWithoutProperties(_this$props, [\"numeric\", \"children\", \"onPress\", \"sortDirection\", \"theme\", \"style\", \"numberOfLines\"]);\n\n      var textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n      var spin = this.state.spinAnim.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '180deg']\n      });\n      var icon = sortDirection ? React.createElement(Animated.View, {\n        style: [styles.icon, {\n          transform: [{\n            rotate: spin\n          }]\n        }]\n      }, React.createElement(MaterialCommunityIcon, {\n        name: \"arrow-down\",\n        size: 16,\n        color: theme.colors.text,\n        direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n      })) : null;\n      return React.createElement(TouchableWithoutFeedback, _extends({\n        disabled: !onPress,\n        onPress: onPress\n      }, rest), React.createElement(View, {\n        style: [styles.container, numeric && styles.right, style]\n      }, icon, React.createElement(Text, {\n        style: [styles.cell, sortDirection ? styles.sorted : {\n          color: textColor\n        }],\n        numberOfLines: numberOfLines\n      }, children)));\n    }\n  }]);\n\n  return DataTableTitle;\n}(React.Component);\n\n_defineProperty(DataTableTitle, \"displayName\", 'DataTable.Title');\n\n_defineProperty(DataTableTitle, \"defaultProps\", {\n  numberOfLines: 1\n});\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12\n  },\n  right: {\n    justifyContent: 'flex-end'\n  },\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center'\n  },\n  sorted: {\n    marginLeft: 8\n  },\n  icon: {\n    height: 24,\n    justifyContent: 'center'\n  }\n});\nexport default withTheme(DataTableTitle);\nexport { DataTableTitle };","map":{"version":3,"sources":["DataTableTitle.tsx"],"names":["DataTableTitle","React","numberOfLines","spinAnim","Animated","prevProps","toValue","duration","useNativeDriver","textColor","color","theme","spin","inputRange","outputRange","icon","sortDirection","styles","transform","rotate","I18nManager","onPress","numeric","container","flex","flexDirection","alignContent","paddingVertical","right","justifyContent","cell","height","lineHeight","fontSize","fontWeight","alignItems","sorted","marginLeft","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof TouchableWithoutFeedback> & {\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending';\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\ntype State = {\n  spinAnim: Animated.Value;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nclass DataTableTitle extends React.Component<Props, State> {\n  static displayName = 'DataTable.Title';\n\n  static defaultProps = {\n    numberOfLines: 1,\n  };\n\n  state = {\n    spinAnim: new Animated.Value(\n      this.props.sortDirection === 'ascending' ? 0 : 1\n    ),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.sortDirection === this.props.sortDirection) {\n      return;\n    }\n\n    Animated.timing(this.state.spinAnim, {\n      toValue: this.props.sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  render() {\n    const {\n      numeric,\n      children,\n      onPress,\n      sortDirection,\n      theme,\n      style,\n      numberOfLines,\n      ...rest\n    } = this.props;\n\n    const textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n    const spin = this.state.spinAnim.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['0deg', '180deg'],\n    });\n\n    const icon = sortDirection ? (\n      <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n        <MaterialCommunityIcon\n          name=\"arrow-down\"\n          size={16}\n          color={theme.colors.text}\n          direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n        />\n      </Animated.View>\n    ) : null;\n\n    return (\n      <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\n        <View style={[styles.container, numeric && styles.right, style]}>\n          {icon}\n\n          <Text\n            style={[\n              styles.cell,\n              sortDirection ? styles.sorted : { color: textColor },\n            ]}\n            numberOfLines={numberOfLines}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(DataTableTitle);\n\n// @component-docs ignore-next-line\nexport { DataTableTitle };\n"]},"metadata":{},"sourceType":"module"}