{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { withTheme } from \"../../core/theming\";\nimport { RadioButtonContext } from \"./RadioButtonGroup\";\nimport { handlePress } from \"./utils\";\nimport TouchableRipple from \"../TouchableRipple\";\nimport RadioButton from \"./RadioButton\";\nimport Text from \"../Typography/Text\";\n\nvar RadioButtonItem = function (_React$Component) {\n  _inherits(RadioButtonItem, _React$Component);\n\n  var _super = _createSuper(RadioButtonItem);\n\n  function RadioButtonItem() {\n    _classCallCheck(this, RadioButtonItem);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RadioButtonItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          label = _this$props.label,\n          style = _this$props.style,\n          labelStyle = _this$props.labelStyle,\n          onPress = _this$props.onPress,\n          disabled = _this$props.disabled,\n          color = _this$props.color,\n          uncheckedColor = _this$props.uncheckedColor,\n          status = _this$props.status,\n          colors = _this$props.theme.colors,\n          accessibilityLabel = _this$props.accessibilityLabel;\n      return React.createElement(RadioButtonContext.Consumer, null, function (context) {\n        return React.createElement(TouchableRipple, {\n          onPress: disabled ? undefined : function () {\n            return handlePress({\n              onPress: onPress,\n              onValueChange: context === null || context === void 0 ? void 0 : context.onValueChange,\n              value: value\n            });\n          },\n          accessibilityLabel: accessibilityLabel\n        }, React.createElement(View, {\n          style: [styles.container, style],\n          pointerEvents: \"none\"\n        }, React.createElement(Text, {\n          style: [styles.label, {\n            color: colors.text\n          }, labelStyle]\n        }, label), React.createElement(RadioButton, {\n          value: value,\n          disabled: disabled,\n          status: status,\n          color: color,\n          uncheckedColor: uncheckedColor\n        })));\n      });\n    }\n  }]);\n\n  return RadioButtonItem;\n}(React.Component);\n\n_defineProperty(RadioButtonItem, \"displayName\", 'RadioButton.Item');\n\nexport default withTheme(RadioButtonItem);\nexport { RadioButtonItem };\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16\n  },\n  label: {\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["RadioButtonItem.tsx"],"names":["RadioButtonItem","React","theme","colors","accessibilityLabel","context","disabled","handlePress","onPress","onValueChange","value","styles","color","text","uncheckedColor","withTheme","container","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal","label","fontSize"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;AAQA,SAAA,SAAA;AACA,SAAA,kBAAA;AACA,SAAA,WAAA;AACA,OAAA,eAAA;AACA,OAAA,WAAA;AACA,OAAA,IAAA;;IA8EA,e;;;;;;;;;;;;;6BAGW;AAAA,wBAaH,KAZJ,KADO;AAAA,UACD,KADC,eACD,KADC;AAAA,UACD,KADC,eACD,KADC;AAAA,UACD,KADC,eACD,KADC;AAAA,UACD,UADC,eACD,UADC;AAAA,UACD,OADC,eACD,OADC;AAAA,UACD,QADC,eACD,QADC;AAAA,UACD,KADC,eACD,KADC;AAAA,UACD,cADC,eACD,cADC;AAAA,UACD,MADC,eACD,MADC;AAAA,UAWIG,MAXJ,eAWLD,KAXK,CAWIC,MAXJ;AAAA,UAYLC,kBAZK,eAYLA,kBAZK;AAeP,aACE,KAAA,CAAA,aAAA,CAAC,kBAAD,CAAA,QAAA,EAAA,IAAA,EACIC,UAAAA,OAAD,EAAsC;AACrC,eACE,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA;AACE,UAAA,OAAO,EACLC,QAAQ,GAAA,SAAA,GAEJ;AAAA,mBACEC,WAAW,CAAC;AACVC,cAAAA,OAAO,EADG,OAAA;AAEVC,cAAAA,aAAa,EAAEJ,OAAF,KAAA,IAAEA,IAAAA,OAAF,KAAA,KAAA,CAAEA,GAAF,KAAA,CAAEA,GAAAA,OAAO,CAFZ,aAAA;AAGVK,cAAAA,KAAAA,EAAAA;AAHU,aAAD,CADb;AAAA,WAJR;AAWE,UAAA,kBAAkB,EAAEN;AAXtB,SAAA,EAaE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,UAAA,KAAK,EAAE,CAACO,MAAM,CAAP,SAAA,EAAb,KAAa,CAAb;AAAwC,UAAA,aAAa,EAAC;AAAtD,SAAA,EACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,UAAA,KAAK,EAAE,CAACA,MAAM,CAAP,KAAA,EAAe;AAAEC,YAAAA,KAAK,EAAET,MAAM,CAACU;AAAhB,WAAf,EAAA,UAAA;AADT,SAAA,EADF,KACE,CADF,EAME,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA;AACE,UAAA,KAAK,EADP,KAAA;AAEE,UAAA,QAAQ,EAFV,QAAA;AAGE,UAAA,MAAM,EAHR,MAAA;AAIE,UAAA,KAAK,EAJP,KAAA;AAKE,UAAA,cAAc,EAAEC;AALlB,SAAA,CANF,CAbF,CADF;AAHN,OACE,CADF;AAoCD;;;;EAtD2Bb,KAAK,CAAnC,S;;gBAAMD,e,iBACiB,kB;;AAwDvB,eAAee,SAAS,CAAxB,eAAwB,CAAxB;AAGA,SAAA,eAAA;AAEA,IAAMJ,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BK,EAAAA,SAAS,EAAE;AACTC,IAAAA,aAAa,EADJ,KAAA;AAETC,IAAAA,UAAU,EAFD,QAAA;AAGTC,IAAAA,cAAc,EAHL,eAAA;AAITC,IAAAA,eAAe,EAJN,CAAA;AAKTC,IAAAA,iBAAiB,EAAE;AALV,GADoB;AAQ/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL;AARwB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress } from './utils';\nimport TouchableRipple from '../TouchableRipple';\nimport RadioButton from './RadioButton';\nimport Text from '../Typography/Text';\n\nexport type Props = {\n  /**\n   * Value of the radio button.\n   */\n  value: string;\n  /**\n   * Label to be displayed on the item.\n   */\n  label: string;\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Accessibility label for the touchable. This is read by the screen reader when the user taps the touchable.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Additional styles for container View.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * RadioButton.Item allows you to press the whole row (item) instead of only the RadioButton.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/radio-item.ios.png\" />\n *     <figcaption>Pressed</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { RadioButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('first');\n *\n *   return (\n *     <RadioButton.Group onValueChange={value => setValue(value)} value={value}>\n *       <RadioButton.Item label=\"First item\" value=\"first\" />\n *       <RadioButton.Item label=\"Second item\" value=\"second\" />\n *     </RadioButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\nclass RadioButtonItem extends React.Component<Props> {\n  static displayName = 'RadioButton.Item';\n\n  render() {\n    const {\n      value,\n      label,\n      style,\n      labelStyle,\n      onPress,\n      disabled,\n      color,\n      uncheckedColor,\n      status,\n      theme: { colors },\n      accessibilityLabel,\n    } = this.props;\n\n    return (\n      <RadioButtonContext.Consumer>\n        {(context?: RadioButtonContextType) => {\n          return (\n            <TouchableRipple\n              onPress={\n                disabled\n                  ? undefined\n                  : () =>\n                      handlePress({\n                        onPress: onPress,\n                        onValueChange: context?.onValueChange,\n                        value,\n                      })\n              }\n              accessibilityLabel={accessibilityLabel}\n            >\n              <View style={[styles.container, style]} pointerEvents=\"none\">\n                <Text\n                  style={[styles.label, { color: colors.text }, labelStyle]}\n                >\n                  {label}\n                </Text>\n                <RadioButton\n                  value={value}\n                  disabled={disabled}\n                  status={status}\n                  color={color}\n                  uncheckedColor={uncheckedColor}\n                />\n              </View>\n            </TouchableRipple>\n          );\n        }}\n      </RadioButtonContext.Consumer>\n    );\n  }\n}\n\nexport default withTheme(RadioButtonItem);\n\n// @component-docs ignore-next-line\nexport { RadioButtonItem };\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  label: {\n    fontSize: 16,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}