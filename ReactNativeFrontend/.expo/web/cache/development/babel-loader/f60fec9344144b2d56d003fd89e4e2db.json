{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport AppbarAction from \"./AppbarAction\";\nimport AppbarBackIcon from \"./AppbarBackIcon\";\n\nvar AppbarBackAction = function (_React$Component) {\n  _inherits(AppbarBackAction, _React$Component);\n\n  var _super = _createSuper(AppbarBackAction);\n\n  function AppbarBackAction() {\n    _classCallCheck(this, AppbarBackAction);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AppbarBackAction, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(AppbarAction, _extends({}, this.props, {\n        icon: AppbarBackIcon\n      }));\n    }\n  }]);\n\n  return AppbarBackAction;\n}(React.Component);\n\n_defineProperty(AppbarBackAction, \"displayName\", 'Appbar.BackAction');\n\n_defineProperty(AppbarBackAction, \"defaultProps\", {\n  accessibilityLabel: 'Back'\n});\n\nexport default AppbarBackAction;","map":{"version":3,"sources":["AppbarBackAction.tsx"],"names":["AppbarBackAction","React","accessibilityLabel","AppbarBackIcon"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,OAAA,YAAA;AACA,OAAA,cAAA;;IA8DA,gB;;;;;;;;;;;;;6BAOW;AACP,aAAO,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA,QAAA,CAAA,EAAA,EAAkB,KAAlB,KAAA,EAAA;AAA8B,QAAA,IAAI,EAAEG;AAApC,OAAA,CAAA,CAAP;AACD;;;;EAT4BF,KAAK,CAApC,S;;gBAAMD,gB,iBACiB,mB;;gBADjBA,gB,kBAGkB;AACpBE,EAAAA,kBAAkB,EAAE;AADA,C;;AASxB,eAAA,gBAAA","sourcesContent":["import * as React from 'react';\nimport type { $Omit } from './../../types';\nimport AppbarAction from './AppbarAction';\nimport AppbarBackIcon from './AppbarBackIcon';\nimport type { StyleProp, ViewStyle } from 'react-native';\n\ntype Props = $Omit<\n  React.ComponentPropsWithoutRef<typeof AppbarAction>,\n  'icon'\n> & {\n  /**\n   *  Custom color for back icon.\n   */\n  color?: string;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component used to display a back button in the appbar.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-backaction-android.png\" />\n *     <figcaption>Android</figcaption>\n *   </figure>\n * </div>\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-backaction-ios.png\" />\n *     <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *       <Appbar.BackAction onPress={() => {}} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass AppbarBackAction extends React.Component<Props> {\n  static displayName = 'Appbar.BackAction';\n\n  static defaultProps = {\n    accessibilityLabel: 'Back',\n  };\n\n  render() {\n    return <AppbarAction {...this.props} icon={AppbarBackIcon} />;\n  }\n}\n\nexport default AppbarBackAction;\n"]},"metadata":{},"sourceType":"module"}