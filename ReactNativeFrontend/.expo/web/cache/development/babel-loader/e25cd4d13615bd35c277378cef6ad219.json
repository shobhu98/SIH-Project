{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _ from 'lodash';\nimport bodyTheme from \"./Body\";\nimport leftTheme from \"./Left\";\nimport rightTheme from \"./Right\";\nimport headerTheme from \"./Header\";\nimport switchTheme from \"./Switch\";\nimport thumbnailTheme from \"./Thumbnail\";\nimport containerTheme from \"./Container\";\nimport contentTheme from \"./Content\";\nimport buttonTheme from \"./Button\";\nimport titleTheme from \"./Title\";\nimport subtitleTheme from \"./Subtitle\";\nimport inputGroupTheme from \"./InputGroup\";\nimport badgeTheme from \"./Badge\";\nimport checkBoxTheme from \"./CheckBox\";\nimport cardTheme from \"./Card\";\nimport radioTheme from \"./Radio\";\nimport h3Theme from \"./H3\";\nimport h2Theme from \"./H2\";\nimport h1Theme from \"./H1\";\nimport footerTheme from \"./Footer\";\nimport footerTabTheme from \"./FooterTab\";\nimport fabTheme from \"./Fab\";\nimport itemTheme from \"./Item\";\nimport labelTheme from \"./Label\";\nimport textAreaTheme from \"./Textarea\";\nimport textTheme from \"./Text\";\nimport toastTheme from \"./Toast\";\nimport tabTheme from \"./Tab\";\nimport tabBarTheme from \"./TabBar\";\nimport tabContainerTheme from \"./TabContainer\";\nimport viewTheme from \"./View\";\nimport tabHeadingTheme from \"./TabHeading\";\nimport iconTheme from \"./Icon\";\nimport inputTheme from \"./Input\";\nimport swipeRowTheme from \"./SwipeRow\";\nimport segmentTheme from \"./Segment\";\nimport spinnerTheme from \"./Spinner\";\nimport cardItemTheme from \"./CardItem\";\nimport listItemTheme from \"./ListItem\";\nimport formTheme from \"./Form\";\nimport separatorTheme from \"./Separator\";\nimport pickerTheme from \"./Picker\";\nimport variable from \"./../variables/platform\";\nexport default (function () {\n  var variables = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : variable;\n  var theme = {\n    variables: variables,\n    'NativeBase.Left': _objectSpread({}, leftTheme(variables)),\n    'NativeBase.Right': _objectSpread({}, rightTheme(variables)),\n    'NativeBase.Body': _objectSpread({}, bodyTheme(variables)),\n    'NativeBase.Header': _objectSpread({}, headerTheme(variables)),\n    'NativeBase.Button': _objectSpread({}, buttonTheme(variables)),\n    'NativeBase.Title': _objectSpread({}, titleTheme(variables)),\n    'NativeBase.Subtitle': _objectSpread({}, subtitleTheme(variables)),\n    'NativeBase.InputGroup': _objectSpread({}, inputGroupTheme(variables)),\n    'NativeBase.Input': _objectSpread({}, inputTheme(variables)),\n    'NativeBase.Badge': _objectSpread({}, badgeTheme(variables)),\n    'NativeBase.CheckBox': _objectSpread({}, checkBoxTheme(variables)),\n    'NativeBase.Radio': _objectSpread({}, radioTheme(variables)),\n    'NativeBase.Card': _objectSpread({}, cardTheme(variables)),\n    'NativeBase.CardItem': _objectSpread({}, cardItemTheme(variables)),\n    'NativeBase.Toast': _objectSpread({}, toastTheme(variables)),\n    'NativeBase.H1': _objectSpread({}, h1Theme(variables)),\n    'NativeBase.H2': _objectSpread({}, h2Theme(variables)),\n    'NativeBase.H3': _objectSpread({}, h3Theme(variables)),\n    'NativeBase.Form': _objectSpread({}, formTheme(variables)),\n    'NativeBase.Container': _objectSpread({}, containerTheme(variables)),\n    'NativeBase.Content': _objectSpread({}, contentTheme(variables)),\n    'NativeBase.Footer': _objectSpread({}, footerTheme(variables)),\n    'NativeBase.Tabs': {\n      flex: 1\n    },\n    'NativeBase.FooterTab': _objectSpread({}, footerTabTheme(variables)),\n    'NativeBase.ListItem': _objectSpread({}, listItemTheme(variables)),\n    'NativeBase.ListItem1': _objectSpread({}, listItemTheme(variables)),\n    'NativeBase.Icon': _objectSpread({}, iconTheme(variables)),\n    'NativeBase.IconNB': _objectSpread({}, iconTheme(variables)),\n    'NativeBase.Text': _objectSpread({}, textTheme(variables)),\n    'NativeBase.Spinner': _objectSpread({}, spinnerTheme(variables)),\n    'NativeBase.Fab': _objectSpread({}, fabTheme(variables)),\n    'NativeBase.Item': _objectSpread({}, itemTheme(variables)),\n    'NativeBase.Label': _objectSpread({}, labelTheme(variables)),\n    'NativeBase.Textarea': _objectSpread({}, textAreaTheme(variables)),\n    'NativeBase.PickerNB': _objectSpread(_objectSpread({}, pickerTheme(variables)), {}, {\n      'NativeBase.Button': {\n        'NativeBase.Text': {}\n      }\n    }),\n    'NativeBase.Tab': _objectSpread({}, tabTheme(variables)),\n    'NativeBase.Segment': _objectSpread({}, segmentTheme(variables)),\n    'NativeBase.TabBar': _objectSpread({}, tabBarTheme(variables)),\n    'NativeBase.ViewNB': _objectSpread({}, viewTheme(variables)),\n    'NativeBase.TabHeading': _objectSpread({}, tabHeadingTheme(variables)),\n    'NativeBase.TabContainer': _objectSpread({}, tabContainerTheme(variables)),\n    'NativeBase.Switch': _objectSpread({}, switchTheme(variables)),\n    'NativeBase.Separator': _objectSpread({}, separatorTheme(variables)),\n    'NativeBase.SwipeRow': _objectSpread({}, swipeRowTheme(variables)),\n    'NativeBase.Thumbnail': _objectSpread({}, thumbnailTheme(variables))\n  };\n\n  var cssifyTheme = function cssifyTheme(grandparent, parent, parentKey) {\n    _.forEach(parent, function (style, styleName) {\n      if (styleName.indexOf('.') === 0 && parentKey && parentKey.indexOf('.') === 0) {\n        if (grandparent) {\n          if (!grandparent[styleName]) {\n            grandparent[styleName] = {};\n          } else {\n            grandparent[styleName][parentKey] = style;\n          }\n        }\n      }\n\n      if (style && typeof style === 'object' && styleName !== 'fontVariant' && styleName !== 'transform') {\n        cssifyTheme(parent, style, styleName);\n      }\n    });\n  };\n\n  cssifyTheme(null, theme, null);\n  return theme;\n});","map":{"version":3,"sources":["/Users/cosentus/Documents/GitHub/SIH-Project/ReactNativeFrontend/native-base-theme/components/index.js"],"names":["_","bodyTheme","leftTheme","rightTheme","headerTheme","switchTheme","thumbnailTheme","containerTheme","contentTheme","buttonTheme","titleTheme","subtitleTheme","inputGroupTheme","badgeTheme","checkBoxTheme","cardTheme","radioTheme","h3Theme","h2Theme","h1Theme","footerTheme","footerTabTheme","fabTheme","itemTheme","labelTheme","textAreaTheme","textTheme","toastTheme","tabTheme","tabBarTheme","tabContainerTheme","viewTheme","tabHeadingTheme","iconTheme","inputTheme","swipeRowTheme","segmentTheme","spinnerTheme","cardItemTheme","listItemTheme","formTheme","separatorTheme","pickerTheme","variable","variables","theme","flex","cssifyTheme","grandparent","parent","parentKey","forEach","style","styleName","indexOf"],"mappings":";;;;;;AAGA,OAAOA,CAAP,MAAc,QAAd;AAEA,OAAOC,SAAP;AACA,OAAOC,SAAP;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP;AACA,OAAOC,cAAP;AACA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,eAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,SAAP;AACA,OAAOC,UAAP;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP;AACA,OAAOC,QAAP;AACA,OAAOC,SAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,SAAP;AACA,OAAOC,UAAP;AACA,OAAOC,QAAP;AACA,OAAOC,WAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,SAAP;AACA,OAAOC,eAAP;AACA,OAAOC,SAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AACA,OAAOC,SAAP;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AACA,OAAOC,QAAP;AAEA,gBAAe,YAAoC;AAAA,MAAnCC,SAAmC,uEAAbD,QAAa;AACjD,MAAME,KAAK,GAAG;AACZD,IAAAA,SAAS,EAATA,SADY;AAEZ,yCACK1C,SAAS,CAAC0C,SAAD,CADd,CAFY;AAKZ,0CACKzC,UAAU,CAACyC,SAAD,CADf,CALY;AAQZ,yCACK3C,SAAS,CAAC2C,SAAD,CADd,CARY;AAYZ,2CACKxC,WAAW,CAACwC,SAAD,CADhB,CAZY;AAgBZ,2CACKnC,WAAW,CAACmC,SAAD,CADhB,CAhBY;AAoBZ,0CACKlC,UAAU,CAACkC,SAAD,CADf,CApBY;AAuBZ,6CACKjC,aAAa,CAACiC,SAAD,CADlB,CAvBY;AA2BZ,+CACKhC,eAAe,CAACgC,SAAD,CADpB,CA3BY;AA+BZ,0CACKV,UAAU,CAACU,SAAD,CADf,CA/BY;AAmCZ,0CACK/B,UAAU,CAAC+B,SAAD,CADf,CAnCY;AAuCZ,6CACK9B,aAAa,CAAC8B,SAAD,CADlB,CAvCY;AA2CZ,0CACK5B,UAAU,CAAC4B,SAAD,CADf,CA3CY;AA+CZ,yCACK7B,SAAS,CAAC6B,SAAD,CADd,CA/CY;AAmDZ,6CACKN,aAAa,CAACM,SAAD,CADlB,CAnDY;AAuDZ,0CACKjB,UAAU,CAACiB,SAAD,CADf,CAvDY;AA2DZ,uCACKzB,OAAO,CAACyB,SAAD,CADZ,CA3DY;AA8DZ,uCACK1B,OAAO,CAAC0B,SAAD,CADZ,CA9DY;AAiEZ,uCACK3B,OAAO,CAAC2B,SAAD,CADZ,CAjEY;AAoEZ,yCACKJ,SAAS,CAACI,SAAD,CADd,CApEY;AAwEZ,8CACKrC,cAAc,CAACqC,SAAD,CADnB,CAxEY;AA2EZ,4CACKpC,YAAY,CAACoC,SAAD,CADjB,CA3EY;AA+EZ,2CACKxB,WAAW,CAACwB,SAAD,CADhB,CA/EY;AAmFZ,uBAAmB;AACjBE,MAAAA,IAAI,EAAE;AADW,KAnFP;AAuFZ,8CACKzB,cAAc,CAACuB,SAAD,CADnB,CAvFY;AA2FZ,6CACKL,aAAa,CAACK,SAAD,CADlB,CA3FY;AA+FZ,8CACKL,aAAa,CAACK,SAAD,CADlB,CA/FY;AAmGZ,yCACKX,SAAS,CAACW,SAAD,CADd,CAnGY;AAsGZ,2CACKX,SAAS,CAACW,SAAD,CADd,CAtGY;AAyGZ,yCACKlB,SAAS,CAACkB,SAAD,CADd,CAzGY;AA4GZ,4CACKP,YAAY,CAACO,SAAD,CADjB,CA5GY;AAgHZ,wCACKtB,QAAQ,CAACsB,SAAD,CADb,CAhHY;AAoHZ,yCACKrB,SAAS,CAACqB,SAAD,CADd,CApHY;AAwHZ,0CACKpB,UAAU,CAACoB,SAAD,CADf,CAxHY;AA4HZ,6CACKnB,aAAa,CAACmB,SAAD,CADlB,CA5HY;AAgIZ,2DACKF,WAAW,CAACE,SAAD,CADhB;AAEE,2BAAqB;AACnB,2BAAmB;AADA;AAFvB,MAhIY;AAuIZ,wCACKhB,QAAQ,CAACgB,SAAD,CADb,CAvIY;AA2IZ,4CACKR,YAAY,CAACQ,SAAD,CADjB,CA3IY;AA+IZ,2CACKf,WAAW,CAACe,SAAD,CADhB,CA/IY;AAkJZ,2CACKb,SAAS,CAACa,SAAD,CADd,CAlJY;AAqJZ,+CACKZ,eAAe,CAACY,SAAD,CADpB,CArJY;AAwJZ,iDACKd,iBAAiB,CAACc,SAAD,CADtB,CAxJY;AA2JZ,2CACKvC,WAAW,CAACuC,SAAD,CADhB,CA3JY;AA8JZ,8CACKH,cAAc,CAACG,SAAD,CADnB,CA9JY;AAiKZ,6CACKT,aAAa,CAACS,SAAD,CADlB,CAjKY;AAoKZ,8CACKtC,cAAc,CAACsC,SAAD,CADnB;AApKY,GAAd;;AAyKA,MAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,WAAD,EAAcC,MAAd,EAAsBC,SAAtB,EAAoC;AACtDlD,IAAAA,CAAC,CAACmD,OAAF,CAAUF,MAAV,EAAkB,UAACG,KAAD,EAAQC,SAAR,EAAsB;AACtC,UACEA,SAAS,CAACC,OAAV,CAAkB,GAAlB,MAA2B,CAA3B,IACAJ,SADA,IAEAA,SAAS,CAACI,OAAV,CAAkB,GAAlB,MAA2B,CAH7B,EAIE;AACA,YAAIN,WAAJ,EAAiB;AACf,cAAI,CAACA,WAAW,CAACK,SAAD,CAAhB,EAA6B;AAC3BL,YAAAA,WAAW,CAACK,SAAD,CAAX,GAAyB,EAAzB;AACD,WAFD,MAEO;AACLL,YAAAA,WAAW,CAACK,SAAD,CAAX,CAAuBH,SAAvB,IAAoCE,KAApC;AACD;AACF;AACF;;AACD,UACEA,KAAK,IACL,OAAOA,KAAP,KAAiB,QADjB,IAEAC,SAAS,KAAK,aAFd,IAGAA,SAAS,KAAK,WAJhB,EAKE;AACAN,QAAAA,WAAW,CAACE,MAAD,EAASG,KAAT,EAAgBC,SAAhB,CAAX;AACD;AACF,KAtBD;AAuBD,GAxBD;;AA0BAN,EAAAA,WAAW,CAAC,IAAD,EAAOF,KAAP,EAAc,IAAd,CAAX;AAEA,SAAOA,KAAP;AACD,CAvMD","sourcesContent":["/* eslint-disable no-param-reassign */\n// @flow\n\nimport _ from 'lodash';\n\nimport bodyTheme from './Body';\nimport leftTheme from './Left';\nimport rightTheme from './Right';\nimport headerTheme from './Header';\nimport switchTheme from './Switch';\nimport thumbnailTheme from './Thumbnail';\nimport containerTheme from './Container';\nimport contentTheme from './Content';\nimport buttonTheme from './Button';\nimport titleTheme from './Title';\nimport subtitleTheme from './Subtitle';\nimport inputGroupTheme from './InputGroup';\nimport badgeTheme from './Badge';\nimport checkBoxTheme from './CheckBox';\nimport cardTheme from './Card';\nimport radioTheme from './Radio';\nimport h3Theme from './H3';\nimport h2Theme from './H2';\nimport h1Theme from './H1';\nimport footerTheme from './Footer';\nimport footerTabTheme from './FooterTab';\nimport fabTheme from './Fab';\nimport itemTheme from './Item';\nimport labelTheme from './Label';\nimport textAreaTheme from './Textarea';\nimport textTheme from './Text';\nimport toastTheme from './Toast';\nimport tabTheme from './Tab';\nimport tabBarTheme from './TabBar';\nimport tabContainerTheme from './TabContainer';\nimport viewTheme from './View';\nimport tabHeadingTheme from './TabHeading';\nimport iconTheme from './Icon';\nimport inputTheme from './Input';\nimport swipeRowTheme from './SwipeRow';\nimport segmentTheme from './Segment';\nimport spinnerTheme from './Spinner';\nimport cardItemTheme from './CardItem';\nimport listItemTheme from './ListItem';\nimport formTheme from './Form';\nimport separatorTheme from './Separator';\nimport pickerTheme from './Picker';\nimport variable from './../variables/platform';\n\nexport default (variables /* : * */ = variable) => {\n  const theme = {\n    variables,\n    'NativeBase.Left': {\n      ...leftTheme(variables)\n    },\n    'NativeBase.Right': {\n      ...rightTheme(variables)\n    },\n    'NativeBase.Body': {\n      ...bodyTheme(variables)\n    },\n\n    'NativeBase.Header': {\n      ...headerTheme(variables)\n    },\n\n    'NativeBase.Button': {\n      ...buttonTheme(variables)\n    },\n\n    'NativeBase.Title': {\n      ...titleTheme(variables)\n    },\n    'NativeBase.Subtitle': {\n      ...subtitleTheme(variables)\n    },\n\n    'NativeBase.InputGroup': {\n      ...inputGroupTheme(variables)\n    },\n\n    'NativeBase.Input': {\n      ...inputTheme(variables)\n    },\n\n    'NativeBase.Badge': {\n      ...badgeTheme(variables)\n    },\n\n    'NativeBase.CheckBox': {\n      ...checkBoxTheme(variables)\n    },\n\n    'NativeBase.Radio': {\n      ...radioTheme(variables)\n    },\n\n    'NativeBase.Card': {\n      ...cardTheme(variables)\n    },\n\n    'NativeBase.CardItem': {\n      ...cardItemTheme(variables)\n    },\n\n    'NativeBase.Toast': {\n      ...toastTheme(variables)\n    },\n\n    'NativeBase.H1': {\n      ...h1Theme(variables)\n    },\n    'NativeBase.H2': {\n      ...h2Theme(variables)\n    },\n    'NativeBase.H3': {\n      ...h3Theme(variables)\n    },\n    'NativeBase.Form': {\n      ...formTheme(variables)\n    },\n\n    'NativeBase.Container': {\n      ...containerTheme(variables)\n    },\n    'NativeBase.Content': {\n      ...contentTheme(variables)\n    },\n\n    'NativeBase.Footer': {\n      ...footerTheme(variables)\n    },\n\n    'NativeBase.Tabs': {\n      flex: 1\n    },\n\n    'NativeBase.FooterTab': {\n      ...footerTabTheme(variables)\n    },\n\n    'NativeBase.ListItem': {\n      ...listItemTheme(variables)\n    },\n\n    'NativeBase.ListItem1': {\n      ...listItemTheme(variables)\n    },\n\n    'NativeBase.Icon': {\n      ...iconTheme(variables)\n    },\n    'NativeBase.IconNB': {\n      ...iconTheme(variables)\n    },\n    'NativeBase.Text': {\n      ...textTheme(variables)\n    },\n    'NativeBase.Spinner': {\n      ...spinnerTheme(variables)\n    },\n\n    'NativeBase.Fab': {\n      ...fabTheme(variables)\n    },\n\n    'NativeBase.Item': {\n      ...itemTheme(variables)\n    },\n\n    'NativeBase.Label': {\n      ...labelTheme(variables)\n    },\n\n    'NativeBase.Textarea': {\n      ...textAreaTheme(variables)\n    },\n\n    'NativeBase.PickerNB': {\n      ...pickerTheme(variables),\n      'NativeBase.Button': {\n        'NativeBase.Text': {}\n      }\n    },\n\n    'NativeBase.Tab': {\n      ...tabTheme(variables)\n    },\n\n    'NativeBase.Segment': {\n      ...segmentTheme(variables)\n    },\n\n    'NativeBase.TabBar': {\n      ...tabBarTheme(variables)\n    },\n    'NativeBase.ViewNB': {\n      ...viewTheme(variables)\n    },\n    'NativeBase.TabHeading': {\n      ...tabHeadingTheme(variables)\n    },\n    'NativeBase.TabContainer': {\n      ...tabContainerTheme(variables)\n    },\n    'NativeBase.Switch': {\n      ...switchTheme(variables)\n    },\n    'NativeBase.Separator': {\n      ...separatorTheme(variables)\n    },\n    'NativeBase.SwipeRow': {\n      ...swipeRowTheme(variables)\n    },\n    'NativeBase.Thumbnail': {\n      ...thumbnailTheme(variables)\n    }\n  };\n\n  const cssifyTheme = (grandparent, parent, parentKey) => {\n    _.forEach(parent, (style, styleName) => {\n      if (\n        styleName.indexOf('.') === 0 &&\n        parentKey &&\n        parentKey.indexOf('.') === 0\n      ) {\n        if (grandparent) {\n          if (!grandparent[styleName]) {\n            grandparent[styleName] = {};\n          } else {\n            grandparent[styleName][parentKey] = style;\n          }\n        }\n      }\n      if (\n        style &&\n        typeof style === 'object' &&\n        styleName !== 'fontVariant' &&\n        styleName !== 'transform'\n      ) {\n        cssifyTheme(parent, style, styleName);\n      }\n    });\n  };\n\n  cssifyTheme(null, theme, null);\n\n  return theme;\n};\n"]},"metadata":{},"sourceType":"module"}