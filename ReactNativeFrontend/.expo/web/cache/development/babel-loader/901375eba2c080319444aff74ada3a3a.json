{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/cosentus/Documents/GitHub/SIH-Project/ReactNativeFrontend/pages/PromptProfile.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Button, Title } from 'react-native-paper';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Content } from 'native-base';\nimport { createNativeWrapper } from 'react-native-gesture-handler';\nvar styles = StyleSheet.create({\n  view: {\n    alignItems: \"center\",\n    marginTop: 200\n  },\n  title: {\n    marginBottom: 30\n  },\n  text: {\n    fontSize: 23,\n    textDecorationLine: 'underline',\n    color: \"#16335C\",\n    marginBottom: 10\n  }\n});\n\nvar FillForm = function (_React$Component) {\n  _inherits(FillForm, _React$Component);\n\n  var _super = _createSuper(FillForm);\n\n  function FillForm(props) {\n    var _this;\n\n    _classCallCheck(this, FillForm);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      show: false,\n      auth: \"\"\n    };\n    AsyncStorage.getItem(\"@auth\").then(function (value) {\n      return _this.setState({\n        auth: value\n      }, function () {\n        console.log(_this.state.auth, 'value');\n\n        _this.apicall();\n      });\n    });\n    _this.fetchClicked = _this.fetchClicked.bind(_assertThisInitialized(_this));\n    _this.newdetailsclicked = _this.newdetailsclicked.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FillForm, [{\n    key: \"apicall\",\n    value: function apicall() {\n      var _this2 = this;\n\n      fetch('http://192.168.1.10:7000/api/profile/me', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-auth-token': this.state.auth\n        }\n      }).then(function (response) {\n        console.log(\"Status is \" + response.status);\n        if (response.status != 200) _this2.props.navigation.navigate('FillForm', {\n          auth: _this2.state.auth\n        });\n        response.json();\n      }).then(function (responseData) {\n        _this2.setState({\n          response: responseData\n        });\n\n        _this2.setState({\n          show: true\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"fetchClicked\",\n    value: function fetchClicked() {\n      this.props.navigation.navigate('FillCaseDetails', {\n        response: this.state.response,\n        auth: this.state.auth\n      });\n    }\n  }, {\n    key: \"newdetailsclicked\",\n    value: function newdetailsclicked() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Content, {\n        style: {\n          backgroundColor: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, this.state.show && React.createElement(View, {\n        style: styles.view,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 37\n        }\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, \"You have already filled your profile details.\"), React.createElement(Title, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, \"Fetch details or give new details?\"), React.createElement(TouchableOpacity, {\n        onPress: this.fetchClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, \"Fetch\")), React.createElement(TouchableOpacity, {\n        onPress: this.newdetailsclicked(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, \"New Details\"))));\n    }\n  }]);\n\n  return FillForm;\n}(React.Component);\n\nexport { FillForm as default };","map":{"version":3,"sources":["/Users/cosentus/Documents/GitHub/SIH-Project/ReactNativeFrontend/pages/PromptProfile.js"],"names":["React","Button","Title","AsyncStorage","Content","createNativeWrapper","styles","StyleSheet","create","view","alignItems","marginTop","title","marginBottom","text","fontSize","textDecorationLine","color","FillForm","props","state","show","auth","getItem","then","value","setState","console","log","apicall","fetchClicked","bind","newdetailsclicked","fetch","method","headers","response","status","navigation","navigate","json","responseData","catch","error","backgroundColor","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Title } from 'react-native-paper';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport {StyleSheet, View, TouchableOpacity,Text} from 'react-native';\nimport {Content} from 'native-base';\nimport { createNativeWrapper } from 'react-native-gesture-handler';\n\nconst styles = StyleSheet.create({\n    view:{\n        alignItems:\"center\",\n        marginTop:200,\n    },\n    title:{\n        marginBottom:30\n    },\n    text:{\n        fontSize:23,\n        textDecorationLine: 'underline',\n        color:\"#16335C\",\n        marginBottom:10\n    }\n});\n\nexport default class FillForm extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            show:false,\n            auth:\"\"\n        }\n\n        AsyncStorage.getItem(\"@auth\").then((value)=>this.setState({ auth: value }, () => {\n            console.log(this.state.auth, 'value');\n            this.apicall();\n        }) );\n        // this.props.navigation.navigate('FillForm')\n\n        this.fetchClicked=this.fetchClicked.bind(this);\n        this.newdetailsclicked=this.newdetailsclicked.bind(this);\n\n    }\n\n    apicall(){\n        \n        fetch('http://192.168.1.10:7000/api/profile/me', {\n            method: 'GET',\n            headers: {\n                // Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-auth-token':this.state.auth\n            }\n        }).then((response) => {\n            console.log(\"Status is \"+response.status);\n            if(response.status!=200)\n                this.props.navigation.navigate('FillForm',{auth:this.state.auth});\n            response.json()\n        }).then((responseData) => {\n            //////////////////////////////////\n            this.setState({response:responseData});\n            this.setState({show:true});\n        }).catch (function (error){\n            console.log(error);\n        })\n    }\n\n    fetchClicked(){\n        this.props.navigation.navigate('FillCaseDetails',{response:this.state.response,auth:this.state.auth});\n    }\n\n    newdetailsclicked(){\n        //this.props.navigation.navigate('FillForm',{auth:this.state.auth});\n    }\n\n    render(){\n        return(\n            \n            <Content style={{backgroundColor:\"white\"}}>\n                {this.state.show && <View style={styles.view}>\n                    <Title>You have already filled your profile details.</Title>\n                    <Title style={styles.title}>Fetch details or give new details?</Title>\n                    <TouchableOpacity onPress={this.fetchClicked}>\n                        <Text style={styles.text}>Fetch</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity onPress={this.newdetailsclicked()}>\n                        <Text style={styles.text}>New Details</Text>\n                    </TouchableOpacity>\n                </View>}\n                \n            </Content>\n            \n            \n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}