{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar TRANSFORM_STYLE_PROPERTIES = ['perspective', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'skewX', 'skewY', 'translateX', 'translateY'];\nexport default function wrapStyleTransforms(style) {\n  var wrapped = {};\n  Object.keys(style).forEach(function (key) {\n    if (TRANSFORM_STYLE_PROPERTIES.indexOf(key) !== -1) {\n      if (!wrapped.transform) {\n        wrapped.transform = [];\n      }\n\n      wrapped.transform.push(_defineProperty({}, key, style[key]));\n    } else {\n      wrapped[key] = style[key];\n    }\n  });\n  return wrapped;\n}","map":{"version":3,"sources":["/Users/cosentus/Documents/GitHub/SIH-Project/ReactNativeFrontend/node_modules/react-native-animatable/wrapStyleTransforms.js"],"names":["TRANSFORM_STYLE_PROPERTIES","wrapStyleTransforms","style","wrapped","Object","keys","forEach","key","indexOf","transform","push"],"mappings":";AACA,IAAMA,0BAA0B,GAAG,CACjC,aADiC,EAEjC,QAFiC,EAGjC,SAHiC,EAIjC,SAJiC,EAKjC,SALiC,EAMjC,OANiC,EAOjC,QAPiC,EAQjC,QARiC,EASjC,OATiC,EAUjC,OAViC,EAWjC,YAXiC,EAYjC,YAZiC,CAAnC;AAgBA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AACjD,MAAMC,OAAO,GAAG,EAAhB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,OAAnB,CAA2B,UAAAC,GAAG,EAAI;AAChC,QAAIP,0BAA0B,CAACQ,OAA3B,CAAmCD,GAAnC,MAA4C,CAAC,CAAjD,EAAoD;AAClD,UAAI,CAACJ,OAAO,CAACM,SAAb,EAAwB;AACtBN,QAAAA,OAAO,CAACM,SAAR,GAAoB,EAApB;AACD;;AACDN,MAAAA,OAAO,CAACM,SAAR,CAAkBC,IAAlB,qBACGH,GADH,EACSL,KAAK,CAACK,GAAD,CADd;AAGD,KAPD,MAOO;AACLJ,MAAAA,OAAO,CAACI,GAAD,CAAP,GAAeL,KAAK,CAACK,GAAD,CAApB;AACD;AACF,GAXD;AAYA,SAAOJ,OAAP;AACD","sourcesContent":["// These styles need to be nested in a transform array\nconst TRANSFORM_STYLE_PROPERTIES = [\n  'perspective',\n  'rotate',\n  'rotateX',\n  'rotateY',\n  'rotateZ',\n  'scale',\n  'scaleX',\n  'scaleY',\n  'skewX',\n  'skewY',\n  'translateX',\n  'translateY',\n];\n\n// Transforms { translateX: 1 } to { transform: [{ translateX: 1 }]}\nexport default function wrapStyleTransforms(style) {\n  const wrapped = {};\n  Object.keys(style).forEach(key => {\n    if (TRANSFORM_STYLE_PROPERTIES.indexOf(key) !== -1) {\n      if (!wrapped.transform) {\n        wrapped.transform = [];\n      }\n      wrapped.transform.push({\n        [key]: style[key],\n      });\n    } else {\n      wrapped[key] = style[key];\n    }\n  });\n  return wrapped;\n}\n"]},"metadata":{},"sourceType":"module"}