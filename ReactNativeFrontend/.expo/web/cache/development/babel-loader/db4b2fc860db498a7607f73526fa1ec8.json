{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport color from 'color';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AnimatedText from \"./Typography/AnimatedText\";\nimport { withTheme } from \"../core/theming\";\n\nvar HelperText = function (_React$PureComponent) {\n  _inherits(HelperText, _React$PureComponent);\n\n  var _super = _createSuper(HelperText);\n\n  function HelperText() {\n    var _this;\n\n    _classCallCheck(this, HelperText);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      shown: new Animated.Value(_this.props.visible ? 1 : 0),\n      textHeight: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showText\", function () {\n      var scale = _this.props.theme.animation.scale;\n      Animated.timing(_this.state.shown, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hideText\", function () {\n      var scale = _this.props.theme.animation.scale;\n      Animated.timing(_this.state.shown, {\n        toValue: 0,\n        duration: 180 * scale,\n        useNativeDriver: true\n      }).start();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTextLayout\", function (e) {\n      _this.props.onLayout && _this.props.onLayout(e);\n\n      _this.setState({\n        textHeight: e.nativeEvent.layout.height\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(HelperText, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.visible !== this.props.visible || prevState.textHeight !== this.state.textHeight) {\n        if (this.props.visible) {\n          this.showText();\n        } else {\n          this.hideText();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          type = _this$props.type,\n          visible = _this$props.visible,\n          theme = _this$props.theme,\n          onLayout = _this$props.onLayout,\n          padding = _this$props.padding,\n          rest = _objectWithoutProperties(_this$props, [\"style\", \"type\", \"visible\", \"theme\", \"onLayout\", \"padding\"]);\n\n      var colors = theme.colors,\n          dark = theme.dark;\n      var textColor = this.props.type === 'error' ? colors.error : color(colors.text).alpha(dark ? 0.7 : 0.54).rgb().string();\n      return React.createElement(AnimatedText, _extends({\n        onLayout: this.handleTextLayout,\n        style: [styles.text, padding !== 'none' ? styles.padding : {}, {\n          color: textColor,\n          opacity: this.state.shown,\n          transform: visible && type === 'error' ? [{\n            translateY: this.state.shown.interpolate({\n              inputRange: [0, 1],\n              outputRange: [-this.state.textHeight / 2, 0]\n            })\n          }] : []\n        }, style]\n      }, rest), this.props.children);\n    }\n  }]);\n\n  return HelperText;\n}(React.PureComponent);\n\n_defineProperty(HelperText, \"defaultProps\", {\n  type: 'info',\n  padding: 'normal',\n  visible: true\n});\n\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 12,\n    paddingVertical: 4\n  },\n  padding: {\n    paddingHorizontal: 12\n  }\n});\nexport default withTheme(HelperText);","map":{"version":3,"sources":["HelperText.tsx"],"names":["HelperText","React","type","padding","visible","shown","Animated","textHeight","prevProps","prevState","scale","toValue","duration","useNativeDriver","e","height","dark","textColor","colors","color","styles","opacity","transform","translateY","inputRange","outputRange","text","fontSize","paddingVertical","paddingHorizontal","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport {\n  Animated,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n  LayoutChangeEvent,\n} from 'react-native';\nimport AnimatedText from './Typography/AnimatedText';\nimport { withTheme } from '../core/theming';\nimport type { $Omit } from '../types';\n\ntype Props = $Omit<\n  $Omit<React.ComponentPropsWithRef<typeof AnimatedText>, 'padding'>,\n  'type'\n> & {\n  /**\n   * Type of the helper text.\n   */\n  type: 'error' | 'info';\n  /**\n   * Whether to display the helper text.\n   */\n  visible?: boolean;\n  /**\n   * Whether to apply padding to the helper text.\n   */\n  padding?: 'none' | 'normal';\n  /**\n   * Text content of the HelperText.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\ntype State = {\n  shown: Animated.Value;\n  textHeight: number;\n};\n\n/**\n * Helper text is used in conjuction with input elements to provide additional hints for the user.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/helper-text.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { HelperText, TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *    const onChangeText = text => setText(text);\n *\n *   const hasErrors = () => {\n *     return !text.includes('@');\n *   };\n *\n *  return (\n *     <View>\n *       <TextInput label=\"Email\" value={text} onChangeText={onChangeText} />\n *       <HelperText type=\"error\" visible={hasErrors()}>\n *         Email address is invalid!\n *       </HelperText>\n *     </View>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nclass HelperText extends React.PureComponent<Props, State> {\n  static defaultProps: Partial<Props> = {\n    type: 'info',\n    padding: 'normal',\n    visible: true,\n  };\n\n  state = {\n    shown: new Animated.Value(this.props.visible ? 1 : 0),\n    textHeight: 0,\n  };\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (\n      prevProps.visible !== this.props.visible ||\n      prevState.textHeight !== this.state.textHeight\n    ) {\n      if (this.props.visible) {\n        this.showText();\n      } else {\n        this.hideText();\n      }\n    }\n  }\n\n  private showText = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.shown, {\n      toValue: 1,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  private hideText = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.shown, {\n      toValue: 0,\n      duration: 180 * scale,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  private handleTextLayout = (e: LayoutChangeEvent) => {\n    //@ts-ignore Animated.Text typings are improved but something is still broken. It thinks onLayout is not callable.\n    this.props.onLayout && this.props.onLayout(e);\n    this.setState({\n      textHeight: e.nativeEvent.layout.height,\n    });\n  };\n\n  render() {\n    const {\n      style,\n      type,\n      visible,\n      theme,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onLayout,\n      padding,\n      ...rest\n    } = this.props;\n    const { colors, dark } = theme;\n\n    const textColor =\n      this.props.type === 'error'\n        ? colors.error\n        : color(colors.text)\n            .alpha(dark ? 0.7 : 0.54)\n            .rgb()\n            .string();\n\n    return (\n      // @ts-ignore\n      <AnimatedText\n        onLayout={this.handleTextLayout}\n        style={[\n          styles.text,\n          padding !== 'none' ? styles.padding : {},\n          {\n            color: textColor,\n            opacity: this.state.shown,\n            transform:\n              visible && type === 'error'\n                ? [\n                    {\n                      translateY: this.state.shown.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [-this.state.textHeight / 2, 0],\n                      }),\n                    },\n                  ]\n                : [],\n          },\n          style,\n        ]}\n        {...rest}\n      >\n        {this.props.children}\n      </AnimatedText>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 12,\n    paddingVertical: 4,\n  },\n  padding: {\n    paddingHorizontal: 12,\n  },\n});\n\nexport default withTheme(HelperText);\n"]},"metadata":{},"sourceType":"module"}