{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/cosentus/Documents/GitHub/SIH-Project/ReactNativeFrontend/pages/Signature.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport ExpoPixi from 'expo-pixi';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Content, H2 } from 'native-base';\nvar styles = StyleSheet.create({\n  sign: {\n    height: 350,\n    width: Math.round(Dimensions.get('window').width) - 20,\n    borderColor: \"grey\",\n    borderWidth: 2\n  },\n  h2: {\n    marginTop: 10,\n    color: \"#FF4B63\",\n    marginBottom: 10\n  },\n  view: {\n    flexDirection: \"row\",\n    marginTop: 20\n  },\n  button: {\n    marginHorizontal: 62,\n    fontSize: 23,\n    textDecorationLine: 'underline',\n    color: \"#16335C\"\n  }\n});\n\nvar Signature = function (_React$Component) {\n  _inherits(Signature, _React$Component);\n\n  var _super = _createSuper(Signature);\n\n  function Signature() {\n    var _this;\n\n    _classCallCheck(this, Signature);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.clearCanvas = function () {\n      _this.refs.signatureCanvas.clear();\n    };\n\n    _this.saveCanvas = function _callee() {\n      var signature_result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(_this.refs.signatureCanvas.takeSnapshotAsync({\n                format: 'jpeg',\n                quality: 0.5,\n                result: 'file'\n              }));\n\n            case 2:\n              signature_result = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(Signature, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Content, {\n        padder: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, React.createElement(H2, {\n        style: styles.h2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, \"Enter signature\"), React.createElement(ExpoPixi.Signature, {\n        ref: \"signatureCanvas\",\n        strokeWidth: 3,\n        strokeAlpha: 0.5,\n        style: styles.sign,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.view,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.clearCanvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, \"Reset\")), React.createElement(TouchableOpacity, {\n        onPress: this.saveCanvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, \"Sign\"))));\n    }\n  }]);\n\n  return Signature;\n}(React.Component);\n\nexport { Signature as default };","map":{"version":3,"sources":["/Users/cosentus/Documents/GitHub/SIH-Project/ReactNativeFrontend/pages/Signature.js"],"names":["React","ExpoPixi","Content","H2","styles","StyleSheet","create","sign","height","width","Math","round","Dimensions","get","borderColor","borderWidth","h2","marginTop","color","marginBottom","view","flexDirection","button","marginHorizontal","fontSize","textDecorationLine","Signature","clearCanvas","refs","signatureCanvas","clear","saveCanvas","takeSnapshotAsync","format","quality","result","signature_result","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;;;;AAIA,SAAQC,OAAR,EAAiBC,EAAjB,QAA0B,aAA1B;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAC;AACDC,IAAAA,MAAM,EAAC,GADN;AAEDC,IAAAA,KAAK,EAACC,IAAI,CAACC,KAAL,CAAWC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBJ,KAApC,IAA2C,EAFhD;AAGDK,IAAAA,WAAW,EAAC,MAHX;AAIDC,IAAAA,WAAW,EAAC;AAJX,GAD0B;AAS/BC,EAAAA,EAAE,EAAC;AACDC,IAAAA,SAAS,EAAC,EADT;AAEDC,IAAAA,KAAK,EAAC,SAFL;AAGDC,IAAAA,YAAY,EAAC;AAHZ,GAT4B;AAc/BC,EAAAA,IAAI,EAAC;AACHC,IAAAA,aAAa,EAAC,KADX;AAEHJ,IAAAA,SAAS,EAAC;AAFP,GAd0B;AAkB/BK,EAAAA,MAAM,EAAC;AACLC,IAAAA,gBAAgB,EAAC,EADZ;AAELC,IAAAA,QAAQ,EAAC,EAFJ;AAGLC,IAAAA,kBAAkB,EAAE,WAHf;AAILP,IAAAA,KAAK,EAAC;AAJD;AAlBwB,CAAlB,CAAf;;IA0BqBQ,S;;;;;;;;;;;;;;;;UACnBC,W,GAAc,YAAM;AAClB,YAAKC,IAAL,CAAUC,eAAV,CAA0BC,KAA1B;AACD,K;;UACDC,U,GAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEX,MAAKH,IAAL,CAAUC,eAAV,CAA0BG,iBAA1B,CAA4C;AAC1CC,gBAAAA,MAAM,EAAE,MADkC;AAE1CC,gBAAAA,OAAO,EAAE,GAFiC;AAG1CC,gBAAAA,MAAM,EAAE;AAHkC,eAA5C,CAFW;;AAAA;AACLC,cAAAA,gBADK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;6BAUJ;AACP,aACE,oBAAC,OAAD;AAAS,QAAA,MAAM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,EAAD;AAAI,QAAA,KAAK,EAAEhC,MAAM,CAACY,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,QAAD,CAAU,SAAV;AACA,QAAA,GAAG,EAAC,iBADJ;AAEA,QAAA,WAAW,EAAE,CAFb;AAGA,QAAA,WAAW,EAAE,GAHb;AAIA,QAAA,KAAK,EAAEZ,MAAM,CAACG,IAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAQE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACgB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKO,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEvB,MAAM,CAACkB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKS,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE3B,MAAM,CAACkB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAJF,CARF,CADF;AAoBD;;;;EAnCoCtB,KAAK,CAACqC,S;;SAAxBX,S","sourcesContent":["import React from 'react'\nimport ExpoPixi from 'expo-pixi'\n//import yourFnToSaveItInYourAPI from 'where ever you api function is'\nimport { Text, TouchableOpacity, View, StyleSheet } from 'react-native'\nimport {Dimensions } from \"react-native\";\nimport {Content, H2} from 'native-base';\n\n\nconst styles = StyleSheet.create({\n  sign:{\n      height:350,\n      width:Math.round(Dimensions.get('window').width)-20,\n      borderColor:\"grey\",\n      borderWidth:2\n      // marginLeft:10,\n      // marginTop:20\n  },\n  h2:{\n    marginTop:10,\n    color:\"#FF4B63\",\n    marginBottom:10\n  },\n  view:{\n    flexDirection:\"row\",\n    marginTop:20\n  },\n  button:{\n    marginHorizontal:62,\n    fontSize:23,\n    textDecorationLine: 'underline',\n    color:\"#16335C\"\n  }\n});\n\nexport default class Signature extends React.Component {\n  clearCanvas = () => {\n    this.refs.signatureCanvas.clear()\n  }\n  saveCanvas = async () => {\n    const signature_result = await\n    this.refs.signatureCanvas.takeSnapshotAsync({\n      format: 'jpeg', // 'png' also supported\n      quality: 0.5, // quality 0 for very poor 1 for very good\n      result: 'file' // \n    })\n    //yourFnToSaveItInYourAPI(signature_result)\n    // inside the fn above, use signature_result.uri to get the absolute file path\n  }\n  render() {\n    return (\n      <Content padder>\n        <H2 style={styles.h2}>Enter signature</H2>\n        <ExpoPixi.Signature\n        ref='signatureCanvas' //Important to be able to call this obj\n        strokeWidth={3} // thickness of the brush\n        strokeAlpha={0.5} // opacity of the brush\n        style={styles.sign}\n        />\n        <View style={styles.view}>\n          <TouchableOpacity onPress={this.clearCanvas} >\n            <Text style={styles.button}>Reset</Text>\n          </TouchableOpacity>\n          <TouchableOpacity onPress={this.saveCanvas} >\n            <Text style={styles.button}>Sign</Text>\n          </TouchableOpacity>\n        </View>\n      </Content>\n      \n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}