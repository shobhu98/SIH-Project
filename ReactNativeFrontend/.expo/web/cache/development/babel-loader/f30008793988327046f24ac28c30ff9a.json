{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar DialogScrollArea = function (_React$Component) {\n  _inherits(DialogScrollArea, _React$Component);\n\n  var _super = _createSuper(DialogScrollArea);\n\n  function DialogScrollArea() {\n    _classCallCheck(this, DialogScrollArea);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DialogScrollArea, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, _extends({}, this.props, {\n        style: [styles.container, this.props.style]\n      }), this.props.children);\n    }\n  }]);\n\n  return DialogScrollArea;\n}(React.Component);\n\n_defineProperty(DialogScrollArea, \"displayName\", 'Dialog.ScrollArea');\n\nvar styles = StyleSheet.create({\n  container: {\n    borderColor: 'rgba(0, 0, 0, .12)',\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    paddingHorizontal: 24,\n    flexGrow: 1,\n    flexShrink: 1\n  }\n});\nexport default DialogScrollArea;","map":{"version":3,"sources":["DialogScrollArea.tsx"],"names":["DialogScrollArea","React","styles","container","borderColor","borderTopWidth","StyleSheet","borderBottomWidth","paddingHorizontal","flexGrow","flexShrink"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;IAgDA,gB;;;;;;;;;;;;;6BAGW;AACP,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA,EAAA,EAAU,KAAV,KAAA,EAAA;AAAsB,QAAA,KAAK,EAAE,CAACE,MAAM,CAAP,SAAA,EAAmB,KAAA,KAAA,CAAnB,KAAA;AAA7B,OAAA,CAAA,EACG,KAAA,KAAA,CAFL,QACE,CADF;AAKD;;;;EAT4BD,KAAK,CAApC,S;;gBAAMD,gB,iBACiB,mB;;AAWvB,IAAME,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EADF,oBAAA;AAETC,IAAAA,cAAc,EAAEC,UAAU,CAFjB,aAAA;AAGTC,IAAAA,iBAAiB,EAAED,UAAU,CAHpB,aAAA;AAITE,IAAAA,iBAAiB,EAJR,EAAA;AAKTC,IAAAA,QAAQ,EALC,CAAA;AAMTC,IAAAA,UAAU,EAAE;AANH;AADoB,CAAlB,CAAf;AAWA,eAAA,gBAAA","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogScrollArea`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a scrollable content in a Dialog. The component only provides appropriate styling.\n * For the scrollable content you can use `ScrollView`, `FlatList` etc. depending on your requirement.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/dialog-scroll-area.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ScrollView } from 'react-native';\n * import { Dialog, Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.ScrollArea>\n *           <ScrollView contentContainerStyle={{paddingHorizontal: 24}}>\n *             <Text>This is a scrollable area</Text>\n *           </ScrollView>\n *         </Dialog.ScrollArea>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nclass DialogScrollArea extends React.Component<Props> {\n  static displayName = 'Dialog.ScrollArea';\n\n  render() {\n    return (\n      <View {...this.props} style={[styles.container, this.props.style]}>\n        {this.props.children}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderColor: 'rgba(0, 0, 0, .12)',\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    paddingHorizontal: 24,\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n});\n\nexport default DialogScrollArea;\n"]},"metadata":{},"sourceType":"module"}