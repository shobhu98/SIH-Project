{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport { Appearance } from \"react-native-web/dist/index\";\nimport { ThemeProvider } from \"./theming\";\nimport { Provider as SettingsProvider } from \"./settings\";\nimport MaterialCommunityIcon from \"../components/MaterialCommunityIcon\";\nimport PortalHost from \"../components/Portal/PortalHost\";\nimport DefaultTheme from \"../styles/DefaultTheme\";\nimport DarkTheme from \"../styles/DarkTheme\";\n\nvar Provider = function (_React$Component) {\n  _inherits(Provider, _React$Component);\n\n  var _super = _createSuper(Provider);\n\n  function Provider() {\n    var _this;\n\n    _classCallCheck(this, Provider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      reduceMotionEnabled: false,\n      colorScheme: (Appearance === null || Appearance === void 0 ? void 0 : Appearance.getColorScheme()) || 'light'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAppearanceChange\", function (preferences) {\n      var colorScheme = preferences.colorScheme;\n\n      _this.setState({\n        colorScheme: colorScheme\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getTheme\", function () {\n      var providedTheme = _this.props.theme;\n      var _this$state = _this.state,\n          reduceMotionEnabled = _this$state.reduceMotionEnabled,\n          colorScheme = _this$state.colorScheme;\n\n      if (providedTheme) {\n        return providedTheme;\n      } else {\n        var theme = colorScheme === 'dark' ? DarkTheme : DefaultTheme;\n        return _objectSpread(_objectSpread({}, theme), {}, {\n          animation: _objectSpread(_objectSpread({}, theme.animation), {}, {\n            scale: reduceMotionEnabled ? 0 : 1\n          })\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateReduceMotionSettingsInfo\", function _callee() {\n      var reduceMotionEnabled;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AccessibilityInfo.isReduceMotionEnabled());\n\n            case 3:\n              reduceMotionEnabled = _context.sent;\n\n              _this.setState({\n                reduceMotionEnabled: reduceMotionEnabled\n              });\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.warn(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(Provider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              AccessibilityInfo.addEventListener('reduceMotionChanged', this.updateReduceMotionSettingsInfo);\n              this.updateReduceMotionSettingsInfo();\n              Appearance === null || Appearance === void 0 ? void 0 : Appearance.addChangeListener(this.handleAppearanceChange);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      AccessibilityInfo.removeEventListener('reduceMotionChanged', this.updateReduceMotionSettingsInfo);\n      Appearance === null || Appearance === void 0 ? void 0 : Appearance.removeChangeListener(this.handleAppearanceChange);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          settings = _this$props.settings;\n      return React.createElement(PortalHost, null, React.createElement(SettingsProvider, {\n        value: settings || {\n          icon: MaterialCommunityIcon\n        }\n      }, React.createElement(ThemeProvider, {\n        theme: this.getTheme()\n      }, children)));\n    }\n  }]);\n\n  return Provider;\n}(React.Component);\n\nexport { Provider as default };","map":{"version":3,"sources":["Provider.tsx"],"names":["Provider","React","reduceMotionEnabled","colorScheme","AccessibilityInfo","Appearance","preferences","theme","providedTheme","animation","scale","console","settings","icon","MaterialCommunityIcon"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;SACA,U;AACA,SAAA,aAAA;AACA,SAASA,QAAQ,IAAjB,gBAAA;AACA,OAAA,qBAAA;AACA,OAAA,UAAA;AACA,OAAA,YAAA;AACA,OAAA,SAAA;;IAae,Q;;;;;AAAqD,sBAAA;AAAA;;AAAA;;AAAA,sCAAA,IAAA;AAAA,MAAA,IAAA;AAAA;;AAAA,oDAAA,IAAA;;AAAA,IAAA,eAAA,gCAAA,OAAA,EAC1D;AACNE,MAAAA,mBAAmB,EADb,KAAA;AAENC,MAAAA,WAAW,EAAE,CAAA,UAAU,KAAV,IAAA,IAAA,UAAU,KAAA,KAAV,CAAA,GAAA,KAAA,CAAA,GAAA,UAAU,CAAV,cAAA,EAAA,KAAgC;AAFvC,KAD0D,CAAA;;AAAA,IAAA,eAAA,gCAAA,wBAAA,EAwBhEG,UAAAA,WAD+B,EAE5B;AAAA,UACKH,WADL,GACH,WADG,CACKA,WADL;;AAEH,YAAA,QAAA,CAAc;AAAEA,QAAAA,WAAAA,EAAAA;AAAF,OAAd;AA3BgE,KAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,UAAA,EA8B/C,YAAM;AAAA,UACRK,aADQ,GACU,MAAjC,KADuB,CACfD,KADe;AAAA,wBAEsB,MAA7C,KAFuB;AAAA,UAEjB,mBAFiB,eAEjB,mBAFiB;AAAA,UAEMJ,WAFN,eAEMA,WAFN;;AAIvB,UAAA,aAAA,EAAmB;AACjB,eAAA,aAAA;AADF,OAAA,MAEO;AACL,YAAMI,KAAK,GAAIJ,WAAW,KAAXA,MAAAA,GAAAA,SAAAA,GAAf,YAAA;AAIA,eAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA;AAEEM,UAAAA,SAAS,EAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EACJF,KAAK,CADD,SAAA,CAAA,EAAA,EAAA,EAAA;AAEPG,YAAAA,KAAK,EAAER,mBAAmB,GAAA,CAAA,GAAO;AAF1B,WAAA;AAFX,SAAA,CAAA;AAOD;AAhD+D,KAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,gCAAA,EAmDzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEHE,iBAAiB,CAAnD,qBAAkCA,EAFG;;AAAA;AAE/BF,cAAAA,mBAF+B;;AAIrC,oBAAA,QAAA,CAAc;AAAEA,gBAAAA,mBAAAA,EAAAA;AAAF,eAAd;;AAJqC;AAAA;;AAAA;AAAA;AAAA;AAMrCS,cAAAA,OAAO,CAAPA,IAAAA;;AANqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAnDyB,CAAA;;AAAA;AAAA;;;;;;;;;AAOhEP,cAAAA,iBAAiB,CAAjBA,gBAAAA,CAAAA,qBAAAA,EAEE,KAFFA,8BAAAA;AAIA,mBAAA,8BAAA;AACAC,cAAAA,UAAU,KAAVA,IAAAA,IAAAA,UAAU,KAAA,KAAVA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,UAAU,CAAVA,iBAAAA,CAA8B,KAA9BA,sBAAAA,CAAAA;;;;;;;;;;;2CAGqB;AACrBD,MAAAA,iBAAiB,CAAjBA,mBAAAA,CAAAA,qBAAAA,EAEE,KAFFA,8BAAAA;AAIAC,MAAAA,UAAU,KAAVA,IAAAA,IAAAA,UAAU,KAAA,KAAVA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,UAAU,CAAVA,oBAAAA,CAAiC,KAAjCA,sBAAAA,CAAAA;AACD;;;6BAwCQ;AAAA,wBACwB,KAA/B,KADO;AAAA,UACD,QADC,eACD,QADC;AAAA,UACWO,QADX,eACWA,QADX;AAGP,aACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AAAkB,QAAA,KAAK,EAAEA,QAAQ,IAAI;AAAEC,UAAAA,IAAI,EAAEC;AAAR;AAArC,OAAA,EACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;AAAe,QAAA,KAAK,EAAE,KAAA,QAAA;AAAtB,OAAA,EAHN,QAGM,CADF,CADF,CADF;AAOD;;;;EAvEmCb,KAAK,CAA5B,S;;SAAA,Q","sourcesContent":["import * as React from 'react';\nimport { AccessibilityInfo, Appearance, ColorSchemeName } from 'react-native';\nimport { ThemeProvider } from './theming';\nimport { Provider as SettingsProvider, Settings } from './settings';\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport DefaultTheme from '../styles/DefaultTheme';\nimport DarkTheme from '../styles/DarkTheme';\n\ntype Props = {\n  children: React.ReactNode;\n  theme?: ReactNativePaper.Theme;\n  settings?: Settings;\n};\n\ntype State = {\n  colorScheme: ColorSchemeName;\n  reduceMotionEnabled: boolean;\n};\n\nexport default class Provider extends React.Component<Props, State> {\n  state = {\n    reduceMotionEnabled: false,\n    colorScheme: Appearance?.getColorScheme() || 'light',\n  };\n\n  async componentDidMount() {\n    AccessibilityInfo.addEventListener(\n      'reduceMotionChanged',\n      this.updateReduceMotionSettingsInfo\n    );\n    this.updateReduceMotionSettingsInfo();\n    Appearance?.addChangeListener(this.handleAppearanceChange);\n  }\n\n  componentWillUnmount() {\n    AccessibilityInfo.removeEventListener(\n      'reduceMotionChanged',\n      this.updateReduceMotionSettingsInfo\n    );\n    Appearance?.removeChangeListener(this.handleAppearanceChange);\n  }\n\n  private handleAppearanceChange = (\n    preferences: Appearance.AppearancePreferences\n  ) => {\n    const { colorScheme } = preferences;\n    this.setState({ colorScheme });\n  };\n\n  private getTheme = () => {\n    const { theme: providedTheme } = this.props;\n    const { reduceMotionEnabled, colorScheme } = this.state;\n\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      const theme = (colorScheme === 'dark'\n        ? DarkTheme\n        : DefaultTheme) as ReactNativePaper.Theme;\n\n      return {\n        ...theme,\n        animation: {\n          ...theme.animation,\n          scale: reduceMotionEnabled ? 0 : 1,\n        },\n      };\n    }\n  };\n\n  private updateReduceMotionSettingsInfo = async () => {\n    try {\n      const reduceMotionEnabled = await AccessibilityInfo.isReduceMotionEnabled();\n\n      this.setState({ reduceMotionEnabled });\n    } catch (err) {\n      console.warn(err);\n    }\n  };\n\n  render() {\n    const { children, settings } = this.props;\n\n    return (\n      <PortalHost>\n        <SettingsProvider value={settings || { icon: MaterialCommunityIcon }}>\n          <ThemeProvider theme={this.getTheme()}>{children}</ThemeProvider>\n        </SettingsProvider>\n      </PortalHost>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}