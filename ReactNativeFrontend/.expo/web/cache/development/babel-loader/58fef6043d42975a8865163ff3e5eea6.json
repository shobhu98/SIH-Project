{"ast":null,"code":"export var CameraType;\n\n(function (CameraType) {\n  CameraType[\"front\"] = \"front\";\n  CameraType[\"back\"] = \"back\";\n})(CameraType || (CameraType = {}));\n\nexport var ImageType;\n\n(function (ImageType) {\n  ImageType[\"png\"] = \"png\";\n  ImageType[\"jpg\"] = \"jpg\";\n})(ImageType || (ImageType = {}));","map":{"version":3,"sources":["../../src/CameraModule/CameraModule.types.ts"],"names":[],"mappings":"AAAA,OAAA,IAAY,UAAZ;;AAAA,CAAA,UAAY,UAAZ,EAAsB;AACpB,EAAA,UAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,UAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACD,CAHD,EAAY,UAAU,KAAV,UAAU,GAAA,EAAA,CAAtB;;AAKA,OAAA,IAAY,SAAZ;;AAAA,CAAA,UAAY,SAAZ,EAAqB;AACnB,EAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACD,CAHD,EAAY,SAAS,KAAT,SAAS,GAAA,EAAA,CAArB","sourcesContent":["export enum CameraType {\n  front = 'front',\n  back = 'back',\n}\n\nexport enum ImageType {\n  png = 'png',\n  jpg = 'jpg',\n}\n\nexport type ImageParameters = {\n  imageType: ImageType;\n  quality: number | null;\n};\n\nexport type ImageSize = {\n  width: number;\n  height: number;\n};\n\nexport type CaptureOptions = {\n  quality?: number;\n  exif?: boolean;\n  onPictureSaved?: Function;\n  skipProcessing?: boolean; // TODO: Bacon: IMP\n  //Web\n  scale: number;\n  imageType: ImageType;\n  isImageMirror: boolean;\n};\n\nexport type CapturedPicture = {\n  width: number;\n  height: number;\n  uri: string;\n  base64?: string;\n  exif?: any;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}