{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { copyAsync } from 'expo-file-system';\nimport uriAsync from \"./uriAsync\";\nimport replaceNameInUri from \"./replaceNameInUri\";\n\nfunction copyAssetToSameDirectoryWithNewNameAsync(fileReference, name) {\n  var url, nextUrl;\n  return _regeneratorRuntime.async(function copyAssetToSameDirectoryWithNewNameAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(uriAsync(fileReference));\n\n        case 2:\n          url = _context.sent;\n          nextUrl = replaceNameInUri(url, name);\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(copyAsync({\n            from: url,\n            to: nextUrl\n          }));\n\n        case 6:\n          return _context.abrupt(\"return\", nextUrl);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport default copyAssetToSameDirectoryWithNewNameAsync;","map":{"version":3,"sources":["/Users/cosentus/Documents/GitHub/SIH-Project/ReactNativeFrontend/node_modules/expo-asset-utils/src/copyAssetToSameDirectoryWithNewNameAsync.js"],"names":["copyAsync","uriAsync","replaceNameInUri","copyAssetToSameDirectoryWithNewNameAsync","fileReference","name","url","nextUrl","from","to"],"mappings":";AACA,SAASA,SAAT,QAA0B,kBAA1B;AACA,OAAOC,QAAP;AACA,OAAOC,gBAAP;;AAEA,SAAeC,wCAAf,CACEC,aADF,EAEEC,IAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAIoBJ,QAAQ,CAACG,aAAD,CAJ5B;;AAAA;AAIQE,UAAAA,GAJR;AAKQC,UAAAA,OALR,GAKkBL,gBAAgB,CAACI,GAAD,EAAMD,IAAN,CALlC;AAAA;AAAA,2CAMQL,SAAS,CAAC;AAAEQ,YAAAA,IAAI,EAAEF,GAAR;AAAaG,YAAAA,EAAE,EAAEF;AAAjB,WAAD,CANjB;;AAAA;AAAA,2CAOSA,OAPT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAeJ,wCAAf","sourcesContent":["// @flow\nimport { copyAsync } from 'expo-file-system';\nimport uriAsync from './uriAsync';\nimport replaceNameInUri from './replaceNameInUri';\n\nasync function copyAssetToSameDirectoryWithNewNameAsync(\n  fileReference,\n  name: string\n): Promise<string> {\n  const url = await uriAsync(fileReference);\n  const nextUrl = replaceNameInUri(url, name);\n  await copyAsync({ from: url, to: nextUrl });\n  return nextUrl;\n}\n\nexport default copyAssetToSameDirectoryWithNewNameAsync;\n"]},"metadata":{},"sourceType":"module"}