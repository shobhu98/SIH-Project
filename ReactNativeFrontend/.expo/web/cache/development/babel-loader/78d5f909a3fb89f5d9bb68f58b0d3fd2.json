{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/cosentus/Documents/GitHub/SIH-Project/ReactNativeFrontend/pages/Profile.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Constants from 'expo-constants';\nimport * as Speech from 'expo-speech';\nimport Voice from '@react-native-community/voice';\n\nvar Profile = function (_React$Component) {\n  _inherits(Profile, _React$Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      text: \"\",\n      flag: false\n    };\n\n    Voice.onSpeechResults = function (res) {\n      _this.setState({\n        text: JSON.stringify(res),\n        flag: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"speak\",\n    value: function speak() {\n      var thingToSay = 'नमस्ते';\n      Speech.speak(thingToSay, {\n        language: \"hi-IN\",\n        pitch: 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, React.createElement(Button, {\n        title: \"Press to hear some words\",\n        onPress: this.speak,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"speak\",\n        onPress: function onPress() {\n          return Voice.start('en-US');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }), this.state.flag && React.createElement(Button, {\n        title: \"WOWOW\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }\n      }));\n    }\n  }]);\n\n  return Profile;\n}(React.Component);\n\nexport { Profile as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#ecf0f1',\n    padding: 8\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/cosentus/Documents/GitHub/SIH-Project/ReactNativeFrontend/pages/Profile.js"],"names":["React","Constants","Speech","Voice","Profile","props","state","text","flag","onSpeechResults","res","setState","JSON","stringify","thingToSay","speak","language","pitch","styles","container","start","Component","StyleSheet","create","flex","justifyContent","paddingTop","statusBarHeight","backgroundColor","padding","paragraph","margin","fontSize","fontWeight","textAlign"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAO,KAAKC,MAAZ,MAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;;IAGqBC,O;;;;;AACnB,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;;AAIAL,IAAAA,KAAK,CAACM,eAAN,GAAwB,UAACC,GAAD,EAAS;AAC/B,YAAKC,QAAL,CAAc;AACZJ,QAAAA,IAAI,EAACK,IAAI,CAACC,SAAL,CAAeH,GAAf,CADO;AAEZF,QAAAA,IAAI,EAAC;AAFO,OAAd;AAID,KALD;;AANgB;AAajB;;;;4BACO;AACN,UAAIM,UAAU,GAAG,QAAjB;AACAZ,MAAAA,MAAM,CAACa,KAAP,CAAaD,UAAb,EAAwB;AAACE,QAAAA,QAAQ,EAAC,OAAV;AAAmBC,QAAAA,KAAK,EAAC;AAAzB,OAAxB;AACD;;;6BAEQ;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,0BAAd;AAAyC,QAAA,OAAO,EAAE,KAAKJ,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAMZ,KAAK,CAACiB,KAAN,CAAY,OAAZ,CAAN;AAAA,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGG,KAAKd,KAAL,CAAWE,IAAX,IAAmB,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHtB,CADF;AAOD;;;;EA5BkCR,KAAK,CAACqB,S;;SAAtBjB,O;AA+BrB,IAAMc,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAEzB,SAAS,CAAC0B,eAHb;AAITC,IAAAA,eAAe,EAAE,SAJR;AAKTC,IAAAA,OAAO,EAAE;AALA,GADoB;AAQ/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,QAAQ,EAAE,EAFD;AAGTC,IAAAA,UAAU,EAAE,MAHH;AAITC,IAAAA,SAAS,EAAE;AAJF;AARoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet, Button } from 'react-native';\nimport Constants from 'expo-constants';\nimport * as Speech from 'expo-speech';\nimport Voice from '@react-native-community/voice';\n\n\nexport default class Profile extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      text: \"\",\n      flag: false\n    }; \n    Voice.onSpeechResults = (res) => {\n      this.setState({\n        text:JSON.stringify(res),\n        flag:true\n      });\n    }\n    \n  }\n  speak() {\n    var thingToSay = 'नमस्ते';\n    Speech.speak(thingToSay,{language:\"hi-IN\", pitch:1});\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Button title=\"Press to hear some words\" onPress={this.speak} />\n        <Button title=\"speak\" onPress={() => Voice.start('en-US')} ></Button>\n        {this.state.flag && <Button title=\"WOWOW\"></Button>}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#ecf0f1',\n    padding: 8,\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n});"]},"metadata":{},"sourceType":"module"}