{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CardContent from \"./CardContent\";\nimport CardActions from \"./CardActions\";\nimport CardCover from \"./CardCover\";\nimport CardTitle from \"./CardTitle\";\nimport Surface from \"../Surface\";\nimport { withTheme } from \"../../core/theming\";\n\nvar Card = function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  var _super = _createSuper(Card);\n\n  function Card() {\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      elevation: new Animated.Value(_this.props.elevation)\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePressIn\", function () {\n      var scale = _this.props.theme.animation.scale;\n      Animated.timing(_this.state.elevation, {\n        toValue: 8,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePressOut\", function () {\n      var scale = _this.props.theme.animation.scale;\n      Animated.timing(_this.state.elevation, {\n        toValue: _this.props.elevation,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    });\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          cardElevation = _this$props.elevation,\n          onLongPress = _this$props.onLongPress,\n          onPress = _this$props.onPress,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          testID = _this$props.testID,\n          accessible = _this$props.accessible,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"elevation\", \"onLongPress\", \"onPress\", \"style\", \"theme\", \"testID\", \"accessible\"]);\n\n      var elevation = this.state.elevation;\n      var roundness = theme.roundness;\n      var total = React.Children.count(children);\n      var siblings = React.Children.map(children, function (child) {\n        return React.isValidElement(child) && child.type ? child.type.displayName : null;\n      });\n      return React.createElement(Surface, _extends({\n        style: [{\n          borderRadius: roundness,\n          elevation: elevation\n        }, style]\n      }, rest), React.createElement(TouchableWithoutFeedback, {\n        delayPressIn: 0,\n        disabled: !(onPress || onLongPress),\n        onLongPress: onLongPress,\n        onPress: onPress,\n        onPressIn: onPress ? this.handlePressIn : undefined,\n        onPressOut: onPress ? this.handlePressOut : undefined,\n        testID: testID,\n        accessible: accessible\n      }, React.createElement(View, {\n        style: styles.innerContainer\n      }, React.Children.map(children, function (child, index) {\n        return React.isValidElement(child) ? React.cloneElement(child, {\n          index: index,\n          total: total,\n          siblings: siblings\n        }) : child;\n      }))));\n    }\n  }]);\n\n  return Card;\n}(React.Component);\n\n_defineProperty(Card, \"Content\", CardContent);\n\n_defineProperty(Card, \"Actions\", CardActions);\n\n_defineProperty(Card, \"Cover\", CardCover);\n\n_defineProperty(Card, \"Title\", CardTitle);\n\n_defineProperty(Card, \"defaultProps\", {\n  elevation: 1\n});\n\nvar styles = StyleSheet.create({\n  innerContainer: {\n    flexGrow: 1,\n    flexShrink: 1\n  }\n});\nexport default withTheme(Card);","map":{"version":3,"sources":["Card.tsx"],"names":["Card","React","CardContent","CardActions","CardCover","CardTitle","elevation","Animated","scale","toValue","duration","useNativeDriver","accessible","roundness","total","siblings","child","borderRadius","onPress","styles","innerContainer","index","flexGrow","flexShrink","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport CardContent from './CardContent';\nimport CardActions from './CardActions';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardCover, { CardCover as _CardCover } from './CardCover';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardTitle, { CardTitle as _CardTitle } from './CardTitle';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Resting elevation of the card which controls the drop shadow.\n   */\n  elevation?: number;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Content of the `Card`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Pass down testID from card props to touchable\n   */\n  testID?: string;\n  /**\n   * Pass down accessible from card props to touchable\n   */\n  accessible?: boolean;\n};\n\ntype State = {\n  elevation: Animated.Value;\n};\n\n/**\n * A card is a sheet of material that serves as an entry point to more detailed information.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/card-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/card-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\n *\n * const LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Title title=\"Card Title\" subtitle=\"Card Subtitle\" left={LeftContent} />\n *     <Card.Content>\n *       <Title>Card title</Title>\n *       <Paragraph>Card content</Paragraph>\n *     </Card.Content>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass Card extends React.Component<Props, State> {\n  // @component ./CardContent.tsx\n  static Content = CardContent;\n  // @component ./CardActions.tsx\n  static Actions = CardActions;\n  // @component ./CardCover.tsx\n  static Cover = CardCover;\n  // @component ./CardTitle.tsx\n  static Title = CardTitle;\n\n  static defaultProps = {\n    elevation: 1,\n  };\n\n  state = {\n    // @ts-ignore\n    elevation: new Animated.Value(this.props.elevation),\n  };\n\n  private handlePressIn = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.elevation, {\n      toValue: 8,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  private handlePressOut = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.elevation, {\n      // @ts-ignore\n      toValue: this.props.elevation,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  render() {\n    const {\n      children,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      elevation: cardElevation,\n      onLongPress,\n      onPress,\n      style,\n      theme,\n      testID,\n      accessible,\n      ...rest\n    } = this.props;\n    const { elevation } = this.state;\n    const { roundness } = theme;\n    const total = React.Children.count(children);\n    const siblings = React.Children.map(children, (child) =>\n      React.isValidElement(child) && child.type\n        ? (child.type as any).displayName\n        : null\n    );\n    return (\n      <Surface\n        // @ts-ignore\n        style={[{ borderRadius: roundness, elevation }, style]}\n        {...rest}\n      >\n        <TouchableWithoutFeedback\n          delayPressIn={0}\n          disabled={!(onPress || onLongPress)}\n          onLongPress={onLongPress}\n          onPress={onPress}\n          onPressIn={onPress ? this.handlePressIn : undefined}\n          onPressOut={onPress ? this.handlePressOut : undefined}\n          testID={testID}\n          accessible={accessible}\n        >\n          <View style={styles.innerContainer}>\n            {React.Children.map(children, (child, index) =>\n              React.isValidElement(child)\n                ? React.cloneElement(child, {\n                    index,\n                    total,\n                    siblings,\n                  })\n                : child\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  innerContainer: {\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n});\n\nexport default withTheme(Card);\n"]},"metadata":{},"sourceType":"module"}