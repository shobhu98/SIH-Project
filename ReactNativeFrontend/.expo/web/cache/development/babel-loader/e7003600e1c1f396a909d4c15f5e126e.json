{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\nimport { white } from \"../../styles/colors\";\n\nvar AppbarContent = function (_React$Component) {\n  _inherits(AppbarContent, _React$Component);\n\n  var _super = _createSuper(AppbarContent);\n\n  function AppbarContent() {\n    _classCallCheck(this, AppbarContent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AppbarContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$color = _this$props.color,\n          titleColor = _this$props$color === void 0 ? white : _this$props$color,\n          subtitle = _this$props.subtitle,\n          subtitleStyle = _this$props.subtitleStyle,\n          onPress = _this$props.onPress,\n          style = _this$props.style,\n          titleRef = _this$props.titleRef,\n          titleStyle = _this$props.titleStyle,\n          theme = _this$props.theme,\n          title = _this$props.title,\n          rest = _objectWithoutProperties(_this$props, [\"color\", \"subtitle\", \"subtitleStyle\", \"onPress\", \"style\", \"titleRef\", \"titleStyle\", \"theme\", \"title\"]);\n\n      var fonts = theme.fonts;\n      var subtitleColor = color(titleColor).alpha(0.7).rgb().string();\n      return React.createElement(TouchableWithoutFeedback, {\n        onPress: onPress,\n        disabled: !onPress\n      }, React.createElement(View, _extends({\n        style: [styles.container, style]\n      }, rest), React.createElement(Text, {\n        ref: titleRef,\n        style: [_objectSpread({\n          color: titleColor\n        }, Platform.OS === 'ios' ? fonts.regular : fonts.medium), styles.title, titleStyle],\n        numberOfLines: 1,\n        accessible: true,\n        accessibilityTraits: \"header\",\n        accessibilityRole: Platform.OS === 'web' ? 'heading' : 'header'\n      }, title), subtitle ? React.createElement(Text, {\n        style: [styles.subtitle, {\n          color: subtitleColor\n        }, subtitleStyle],\n        numberOfLines: 1\n      }, subtitle) : null));\n    }\n  }]);\n\n  return AppbarContent;\n}(React.Component);\n\n_defineProperty(AppbarContent, \"displayName\", 'Appbar.Content');\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14\n  }\n});\nexport default withTheme(AppbarContent);\nexport { AppbarContent };","map":{"version":3,"sources":["AppbarContent.tsx"],"names":["AppbarContent","React","color","titleColor","title","fonts","subtitleColor","onPress","styles","Platform","subtitle","container","flex","paddingHorizontal","fontSize","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\n\nimport Text from '../Typography/Text';\n\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\n\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof View> & {\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Text for the title.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Reference for the title.\n   */\n  titleRef?: React.RefObject<Text>;\n  /**\n   * Text for the subtitle.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component used to display a title and optional subtitle in an appbar.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-content.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" subtitle={'Subtitle'} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass AppbarContent extends React.Component<Props> {\n  static displayName = 'Appbar.Content';\n\n  render() {\n    const {\n      color: titleColor = white,\n      subtitle,\n      subtitleStyle,\n      onPress,\n      style,\n      titleRef,\n      titleStyle,\n      theme,\n      title,\n      ...rest\n    } = this.props;\n    const { fonts } = theme;\n\n    const subtitleColor = color(titleColor).alpha(0.7).rgb().string();\n\n    return (\n      <TouchableWithoutFeedback onPress={onPress} disabled={!onPress}>\n        <View style={[styles.container, style]} {...rest}>\n          <Text\n            ref={titleRef}\n            style={[\n              {\n                color: titleColor,\n                ...(Platform.OS === 'ios' ? fonts.regular : fonts.medium),\n              },\n              styles.title,\n              titleStyle,\n            ]}\n            numberOfLines={1}\n            accessible\n            accessibilityTraits=\"header\"\n            // @ts-ignore\n            accessibilityRole={Platform.OS === 'web' ? 'heading' : 'header'}\n          >\n            {title}\n          </Text>\n          {subtitle ? (\n            <Text\n              style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\n              numberOfLines={1}\n            >\n              {subtitle}\n            </Text>\n          ) : null}\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\n  },\n});\n\nexport default withTheme(AppbarContent);\n\n// @component-docs ignore-next-line\nexport { AppbarContent };\n"]},"metadata":{},"sourceType":"module"}