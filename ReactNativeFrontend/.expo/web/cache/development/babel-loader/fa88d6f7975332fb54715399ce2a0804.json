{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/cosentus/Documents/GitHub/SIH-Project/ReactNativeFrontend/pages/PickImage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport * as Permissions from 'expo-permissions';\n\nvar ImagePickerExample = function (_React$Component) {\n  _inherits(ImagePickerExample, _React$Component);\n\n  var _super = _createSuper(ImagePickerExample);\n\n  function ImagePickerExample() {\n    var _this;\n\n    _classCallCheck(this, ImagePickerExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      image: null\n    };\n\n    _this.getPermissionAsync = function _callee() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!Constants.platform.ios) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 3:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._pickImage = function _callee2() {\n      var result;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 1\n              }));\n\n            case 3:\n              result = _context2.sent;\n\n              if (!result.cancelled) {\n                _this.setState({\n                  image: result.uri\n                });\n              }\n\n              console.log(result);\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(ImagePickerExample, [{\n    key: \"render\",\n    value: function render() {\n      var image = this.state.image;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }, React.createElement(Button, {\n        title: \"Pick an image from camera roll\",\n        onPress: this._pickImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }), image && React.createElement(Image, {\n        source: {\n          uri: image\n        },\n        style: {\n          width: 200,\n          height: 200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 19\n        }\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getPermissionAsync();\n    }\n  }]);\n\n  return ImagePickerExample;\n}(React.Component);\n\nexport { ImagePickerExample as default };","map":{"version":3,"sources":["/Users/cosentus/Documents/GitHub/SIH-Project/ReactNativeFrontend/pages/PickImage.js"],"names":["React","ImagePicker","Constants","Permissions","ImagePickerExample","state","image","getPermissionAsync","platform","ios","askAsync","CAMERA_ROLL","status","alert","_pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","setState","uri","console","log","flex","alignItems","justifyContent","width","height","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;;IAEqBC,kB;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAmBRC,kB,GAAqB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBACfL,SAAS,CAACM,QAAV,CAAmBC,GADJ;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAEQN,WAAW,CAACO,QAAZ,CAAqBP,WAAW,CAACQ,WAAjC,CAFR;;AAAA;AAAA;AAETC,cAAAA,MAFS,yBAETA,MAFS;;AAGjB,kBAAIA,MAAM,KAAK,SAAf,EAA0B;AACxBC,gBAAAA,KAAK,CAAC,2DAAD,CAAL;AACD;;AALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UASrBC,U,GAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEUb,WAAW,CAACc,uBAAZ,CAAoC;AACrDC,gBAAAA,UAAU,EAAEf,WAAW,CAACgB,gBAAZ,CAA6BC,GADY;AAErDC,gBAAAA,aAAa,EAAE,IAFsC;AAGrDC,gBAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH6C;AAIrDC,gBAAAA,OAAO,EAAE;AAJ4C,eAApC,CAFV;;AAAA;AAELC,cAAAA,MAFK;;AAQT,kBAAI,CAACA,MAAM,CAACC,SAAZ,EAAuB;AACrB,sBAAKC,QAAL,CAAc;AAAElB,kBAAAA,KAAK,EAAEgB,MAAM,CAACG;AAAhB,iBAAd;AACD;;AAEDC,cAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AAZS;AAAA;;AAAA;AAAA;AAAA;AAcTI,cAAAA,OAAO,CAACC,GAAR;;AAdS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;6BAxBJ;AAAA,UACDrB,KADC,GACS,KAAKD,KADd,CACDC,KADC;AAGP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEsB,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,UAAU,EAAE,QAAvB;AAAiCC,UAAAA,cAAc,EAAE;AAAjD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,gCAAd;AAA+C,QAAA,OAAO,EAAE,KAAKhB,UAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEGR,KAAK,IAAI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE;AAAEmB,UAAAA,GAAG,EAAEnB;AAAP,SAAf;AAA+B,QAAA,KAAK,EAAE;AAAEyB,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,MAAM,EAAE;AAAtB,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFZ,CADF;AAMD;;;wCAEmB;AAClB,WAAKzB,kBAAL;AACD;;;;EAlB6CP,KAAK,CAACiC,S;;SAAjC7B,kB","sourcesContent":["import * as React from 'react';\nimport { Button, Image, View } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport * as Permissions from 'expo-permissions';\n\nexport default class ImagePickerExample extends React.Component {\n  state = {\n    image: null,\n  };\n\n  render() {\n    let { image } = this.state;\n\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <Button title=\"Pick an image from camera roll\" onPress={this._pickImage} />\n        {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}\n      </View>\n    );\n  }\n\n  componentDidMount() {\n    this.getPermissionAsync();\n  }\n\n  getPermissionAsync = async () => {\n    if (Constants.platform.ios) {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== 'granted') {\n        alert('Sorry, we need camera roll permissions to make this work!');\n      }\n    }\n  };\n\n  _pickImage = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1,\n      });\n      if (!result.cancelled) {\n        this.setState({ image: result.uri });\n      }\n\n      console.log(result);\n    } catch (E) {\n      console.log(E);\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}