{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/cosentus/Documents/GitHub/SIH-Project/ReactNativeFrontend/node_modules/react-native-gifted-chat/lib/LoadEarlier.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    marginTop: 5,\n    marginBottom: 10\n  },\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: Color.defaultColor,\n    borderRadius: 15,\n    height: 30,\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  text: {\n    backgroundColor: Color.backgroundTransparent,\n    color: Color.white,\n    fontSize: 12\n  },\n  activityIndicator: {\n    marginTop: Platform.select({\n      ios: -14,\n      android: -16,\n      default: -15\n    })\n  }\n});\n\nvar LoadEarlier = function (_React$Component) {\n  _inherits(LoadEarlier, _React$Component);\n\n  var _super = _createSuper(LoadEarlier);\n\n  function LoadEarlier() {\n    _classCallCheck(this, LoadEarlier);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoadEarlier, [{\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      if (this.props.isLoadingEarlier === false) {\n        return React.createElement(Text, {\n          style: [styles.text, this.props.textStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }\n        }, this.props.label);\n      }\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: [styles.text, this.props.textStyle, {\n          opacity: 0\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, this.props.label), React.createElement(ActivityIndicator, {\n        color: this.props.activityIndicatorColor,\n        size: this.props.activityIndicatorSize,\n        style: [styles.activityIndicator, this.props.activityIndicatorStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(TouchableOpacity, {\n        style: [styles.container, this.props.containerStyle],\n        onPress: function onPress() {\n          if (_this.props.onLoadEarlier) {\n            _this.props.onLoadEarlier();\n          }\n        },\n        disabled: this.props.isLoadingEarlier === true,\n        accessibilityTraits: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: [styles.wrapper, this.props.wrapperStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, this.renderLoading()));\n    }\n  }]);\n\n  return LoadEarlier;\n}(React.Component);\n\nexport { LoadEarlier as default };\nLoadEarlier.defaultProps = {\n  onLoadEarlier: function onLoadEarlier() {},\n  isLoadingEarlier: false,\n  label: 'Load earlier messages',\n  containerStyle: {},\n  wrapperStyle: {},\n  textStyle: {},\n  activityIndicatorStyle: {},\n  activityIndicatorColor: 'white',\n  activityIndicatorSize: 'small'\n};\nLoadEarlier.propTypes = {\n  onLoadEarlier: PropTypes.func,\n  isLoadingEarlier: PropTypes.bool,\n  label: PropTypes.string,\n  containerStyle: StylePropType,\n  wrapperStyle: StylePropType,\n  textStyle: StylePropType,\n  activityIndicatorStyle: StylePropType,\n  activityIndicatorColor: PropTypes.string,\n  activityIndicatorSize: PropTypes.string\n};","map":{"version":3,"sources":["../src/LoadEarlier.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { ActivityIndicator, Platform, StyleSheet, Text, TouchableOpacity, View, } from 'react-native';\nimport Color from './Color';\nimport { StylePropType } from './utils';\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        marginTop: 5,\n        marginBottom: 10,\n    },\n    wrapper: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Color.defaultColor,\n        borderRadius: 15,\n        height: 30,\n        paddingLeft: 10,\n        paddingRight: 10,\n    },\n    text: {\n        backgroundColor: Color.backgroundTransparent,\n        color: Color.white,\n        fontSize: 12,\n    },\n    activityIndicator: {\n        marginTop: Platform.select({\n            ios: -14,\n            android: -16,\n            default: -15,\n        }),\n    },\n});\nexport default class LoadEarlier extends React.Component {\n    renderLoading() {\n        if (this.props.isLoadingEarlier === false) {\n            return (<Text style={[styles.text, this.props.textStyle]}>\n          {this.props.label}\n        </Text>);\n        }\n        return (<View>\n        <Text style={[styles.text, this.props.textStyle, { opacity: 0 }]}>\n          {this.props.label}\n        </Text>\n        <ActivityIndicator color={this.props.activityIndicatorColor} size={this.props.activityIndicatorSize} style={[styles.activityIndicator, this.props.activityIndicatorStyle]}/>\n      </View>);\n    }\n    render() {\n        return (<TouchableOpacity style={[styles.container, this.props.containerStyle]} onPress={() => {\n            if (this.props.onLoadEarlier) {\n                this.props.onLoadEarlier();\n            }\n        }} disabled={this.props.isLoadingEarlier === true} accessibilityTraits='button'>\n        <View style={[styles.wrapper, this.props.wrapperStyle]}>\n          {this.renderLoading()}\n        </View>\n      </TouchableOpacity>);\n    }\n}\nLoadEarlier.defaultProps = {\n    onLoadEarlier: () => { },\n    isLoadingEarlier: false,\n    label: 'Load earlier messages',\n    containerStyle: {},\n    wrapperStyle: {},\n    textStyle: {},\n    activityIndicatorStyle: {},\n    activityIndicatorColor: 'white',\n    activityIndicatorSize: 'small',\n};\nLoadEarlier.propTypes = {\n    onLoadEarlier: PropTypes.func,\n    isLoadingEarlier: PropTypes.bool,\n    label: PropTypes.string,\n    containerStyle: StylePropType,\n    wrapperStyle: StylePropType,\n    textStyle: StylePropType,\n    activityIndicatorStyle: StylePropType,\n    activityIndicatorColor: PropTypes.string,\n    activityIndicatorSize: PropTypes.string,\n};\n//# sourceMappingURL=LoadEarlier.js.map"]},"metadata":{},"sourceType":"module"}